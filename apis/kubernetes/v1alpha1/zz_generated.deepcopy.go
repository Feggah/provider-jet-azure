// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AciConnectorLinuxObservation) DeepCopyInto(out *AciConnectorLinuxObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AciConnectorLinuxObservation.
func (in *AciConnectorLinuxObservation) DeepCopy() *AciConnectorLinuxObservation {
	if in == nil {
		return nil
	}
	out := new(AciConnectorLinuxObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AciConnectorLinuxParameters) DeepCopyInto(out *AciConnectorLinuxParameters) {
	*out = *in
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AciConnectorLinuxParameters.
func (in *AciConnectorLinuxParameters) DeepCopy() *AciConnectorLinuxParameters {
	if in == nil {
		return nil
	}
	out := new(AciConnectorLinuxParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonProfileObservation) DeepCopyInto(out *AddonProfileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonProfileObservation.
func (in *AddonProfileObservation) DeepCopy() *AddonProfileObservation {
	if in == nil {
		return nil
	}
	out := new(AddonProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonProfileParameters) DeepCopyInto(out *AddonProfileParameters) {
	*out = *in
	if in.AciConnectorLinux != nil {
		in, out := &in.AciConnectorLinux, &out.AciConnectorLinux
		*out = make([]AciConnectorLinuxParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzurePolicy != nil {
		in, out := &in.AzurePolicy, &out.AzurePolicy
		*out = make([]AzurePolicyParameters, len(*in))
		copy(*out, *in)
	}
	if in.HttpApplicationRouting != nil {
		in, out := &in.HttpApplicationRouting, &out.HttpApplicationRouting
		*out = make([]HttpApplicationRoutingParameters, len(*in))
		copy(*out, *in)
	}
	if in.IngressApplicationGateway != nil {
		in, out := &in.IngressApplicationGateway, &out.IngressApplicationGateway
		*out = make([]IngressApplicationGatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeDashboard != nil {
		in, out := &in.KubeDashboard, &out.KubeDashboard
		*out = make([]KubeDashboardParameters, len(*in))
		copy(*out, *in)
	}
	if in.OmsAgent != nil {
		in, out := &in.OmsAgent, &out.OmsAgent
		*out = make([]OmsAgentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonProfileParameters.
func (in *AddonProfileParameters) DeepCopy() *AddonProfileParameters {
	if in == nil {
		return nil
	}
	out := new(AddonProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedObservation) DeepCopyInto(out *AllowedObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedObservation.
func (in *AllowedObservation) DeepCopy() *AllowedObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedParameters) DeepCopyInto(out *AllowedParameters) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedParameters.
func (in *AllowedParameters) DeepCopy() *AllowedParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerProfileObservation) DeepCopyInto(out *AutoScalerProfileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerProfileObservation.
func (in *AutoScalerProfileObservation) DeepCopy() *AutoScalerProfileObservation {
	if in == nil {
		return nil
	}
	out := new(AutoScalerProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerProfileParameters) DeepCopyInto(out *AutoScalerProfileParameters) {
	*out = *in
	if in.BalanceSimilarNodeGroups != nil {
		in, out := &in.BalanceSimilarNodeGroups, &out.BalanceSimilarNodeGroups
		*out = new(bool)
		**out = **in
	}
	if in.EmptyBulkDeleteMax != nil {
		in, out := &in.EmptyBulkDeleteMax, &out.EmptyBulkDeleteMax
		*out = new(string)
		**out = **in
	}
	if in.Expander != nil {
		in, out := &in.Expander, &out.Expander
		*out = new(string)
		**out = **in
	}
	if in.MaxGracefulTerminationSec != nil {
		in, out := &in.MaxGracefulTerminationSec, &out.MaxGracefulTerminationSec
		*out = new(string)
		**out = **in
	}
	if in.MaxNodeProvisioningTime != nil {
		in, out := &in.MaxNodeProvisioningTime, &out.MaxNodeProvisioningTime
		*out = new(string)
		**out = **in
	}
	if in.MaxUnreadyNodes != nil {
		in, out := &in.MaxUnreadyNodes, &out.MaxUnreadyNodes
		*out = new(int64)
		**out = **in
	}
	if in.MaxUnreadyPercentage != nil {
		in, out := &in.MaxUnreadyPercentage, &out.MaxUnreadyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.NewPodScaleUpDelay != nil {
		in, out := &in.NewPodScaleUpDelay, &out.NewPodScaleUpDelay
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterAdd != nil {
		in, out := &in.ScaleDownDelayAfterAdd, &out.ScaleDownDelayAfterAdd
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterDelete != nil {
		in, out := &in.ScaleDownDelayAfterDelete, &out.ScaleDownDelayAfterDelete
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterFailure != nil {
		in, out := &in.ScaleDownDelayAfterFailure, &out.ScaleDownDelayAfterFailure
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnneeded != nil {
		in, out := &in.ScaleDownUnneeded, &out.ScaleDownUnneeded
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnready != nil {
		in, out := &in.ScaleDownUnready, &out.ScaleDownUnready
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUtilizationThreshold != nil {
		in, out := &in.ScaleDownUtilizationThreshold, &out.ScaleDownUtilizationThreshold
		*out = new(string)
		**out = **in
	}
	if in.ScanInterval != nil {
		in, out := &in.ScanInterval, &out.ScanInterval
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithLocalStorage != nil {
		in, out := &in.SkipNodesWithLocalStorage, &out.SkipNodesWithLocalStorage
		*out = new(bool)
		**out = **in
	}
	if in.SkipNodesWithSystemPods != nil {
		in, out := &in.SkipNodesWithSystemPods, &out.SkipNodesWithSystemPods
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerProfileParameters.
func (in *AutoScalerProfileParameters) DeepCopy() *AutoScalerProfileParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalerProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureActiveDirectoryObservation) DeepCopyInto(out *AzureActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureActiveDirectoryObservation.
func (in *AzureActiveDirectoryObservation) DeepCopy() *AzureActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(AzureActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureActiveDirectoryParameters) DeepCopyInto(out *AzureActiveDirectoryParameters) {
	*out = *in
	if in.AdminGroupObjectIds != nil {
		in, out := &in.AdminGroupObjectIds, &out.AdminGroupObjectIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AzureRbacEnabled != nil {
		in, out := &in.AzureRbacEnabled, &out.AzureRbacEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientAppId != nil {
		in, out := &in.ClientAppId, &out.ClientAppId
		*out = new(string)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.ServerAppId != nil {
		in, out := &in.ServerAppId, &out.ServerAppId
		*out = new(string)
		**out = **in
	}
	if in.ServerAppSecret != nil {
		in, out := &in.ServerAppSecret, &out.ServerAppSecret
		*out = new(string)
		**out = **in
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureActiveDirectoryParameters.
func (in *AzureActiveDirectoryParameters) DeepCopy() *AzureActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(AzureActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePolicyObservation) DeepCopyInto(out *AzurePolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePolicyObservation.
func (in *AzurePolicyObservation) DeepCopy() *AzurePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AzurePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzurePolicyParameters) DeepCopyInto(out *AzurePolicyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzurePolicyParameters.
func (in *AzurePolicyParameters) DeepCopy() *AzurePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AzurePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNodePoolObservation) DeepCopyInto(out *DefaultNodePoolObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNodePoolObservation.
func (in *DefaultNodePoolObservation) DeepCopy() *DefaultNodePoolObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultNodePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNodePoolParameters) DeepCopyInto(out *DefaultNodePoolParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableHostEncryption != nil {
		in, out := &in.EnableHostEncryption, &out.EnableHostEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIp != nil {
		in, out := &in.EnableNodePublicIp, &out.EnableNodePublicIp
		*out = new(bool)
		**out = **in
	}
	if in.FipsEnabled != nil {
		in, out := &in.FipsEnabled, &out.FipsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = make([]KubeletConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(string)
		**out = **in
	}
	if in.LinuxOsConfig != nil {
		in, out := &in.LinuxOsConfig, &out.LinuxOsConfig
		*out = make([]LinuxOsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int64)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int64)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIpPrefixId != nil {
		in, out := &in.NodePublicIpPrefixId, &out.NodePublicIpPrefixId
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OnlyCriticalAddonsEnabled != nil {
		in, out := &in.OnlyCriticalAddonsEnabled, &out.OnlyCriticalAddonsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(int64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetId != nil {
		in, out := &in.PodSubnetId, &out.PodSubnetId
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupId != nil {
		in, out := &in.ProximityPlacementGroupId, &out.ProximityPlacementGroupId
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UltraSsdEnabled != nil {
		in, out := &in.UltraSsdEnabled, &out.UltraSsdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = make([]UpgradeSettingsParameters, len(*in))
		copy(*out, *in)
	}
	if in.VnetSubnetId != nil {
		in, out := &in.VnetSubnetId, &out.VnetSubnetId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNodePoolParameters.
func (in *DefaultNodePoolParameters) DeepCopy() *DefaultNodePoolParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultNodePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HttpApplicationRoutingObservation) DeepCopyInto(out *HttpApplicationRoutingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HttpApplicationRoutingObservation.
func (in *HttpApplicationRoutingObservation) DeepCopy() *HttpApplicationRoutingObservation {
	if in == nil {
		return nil
	}
	out := new(HttpApplicationRoutingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HttpApplicationRoutingParameters) DeepCopyInto(out *HttpApplicationRoutingParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HttpApplicationRoutingParameters.
func (in *HttpApplicationRoutingParameters) DeepCopy() *HttpApplicationRoutingParameters {
	if in == nil {
		return nil
	}
	out := new(HttpApplicationRoutingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.UserAssignedIdentityId != nil {
		in, out := &in.UserAssignedIdentityId, &out.UserAssignedIdentityId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressApplicationGatewayIdentityObservation) DeepCopyInto(out *IngressApplicationGatewayIdentityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressApplicationGatewayIdentityObservation.
func (in *IngressApplicationGatewayIdentityObservation) DeepCopy() *IngressApplicationGatewayIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IngressApplicationGatewayIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressApplicationGatewayIdentityParameters) DeepCopyInto(out *IngressApplicationGatewayIdentityParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressApplicationGatewayIdentityParameters.
func (in *IngressApplicationGatewayIdentityParameters) DeepCopy() *IngressApplicationGatewayIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IngressApplicationGatewayIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressApplicationGatewayObservation) DeepCopyInto(out *IngressApplicationGatewayObservation) {
	*out = *in
	if in.IngressApplicationGatewayIdentity != nil {
		in, out := &in.IngressApplicationGatewayIdentity, &out.IngressApplicationGatewayIdentity
		*out = make([]IngressApplicationGatewayIdentityObservation, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressApplicationGatewayObservation.
func (in *IngressApplicationGatewayObservation) DeepCopy() *IngressApplicationGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(IngressApplicationGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressApplicationGatewayParameters) DeepCopyInto(out *IngressApplicationGatewayParameters) {
	*out = *in
	if in.GatewayId != nil {
		in, out := &in.GatewayId, &out.GatewayId
		*out = new(string)
		**out = **in
	}
	if in.GatewayName != nil {
		in, out := &in.GatewayName, &out.GatewayName
		*out = new(string)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
	if in.SubnetId != nil {
		in, out := &in.SubnetId, &out.SubnetId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressApplicationGatewayParameters.
func (in *IngressApplicationGatewayParameters) DeepCopy() *IngressApplicationGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(IngressApplicationGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAdminConfigObservation) DeepCopyInto(out *KubeAdminConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAdminConfigObservation.
func (in *KubeAdminConfigObservation) DeepCopy() *KubeAdminConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubeAdminConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAdminConfigParameters) DeepCopyInto(out *KubeAdminConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAdminConfigParameters.
func (in *KubeAdminConfigParameters) DeepCopy() *KubeAdminConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubeAdminConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeConfigObservation) DeepCopyInto(out *KubeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeConfigObservation.
func (in *KubeConfigObservation) DeepCopy() *KubeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeConfigParameters) DeepCopyInto(out *KubeConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeConfigParameters.
func (in *KubeConfigParameters) DeepCopy() *KubeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeDashboardObservation) DeepCopyInto(out *KubeDashboardObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeDashboardObservation.
func (in *KubeDashboardObservation) DeepCopy() *KubeDashboardObservation {
	if in == nil {
		return nil
	}
	out := new(KubeDashboardObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeDashboardParameters) DeepCopyInto(out *KubeDashboardParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeDashboardParameters.
func (in *KubeDashboardParameters) DeepCopy() *KubeDashboardParameters {
	if in == nil {
		return nil
	}
	out := new(KubeDashboardParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletConfigObservation) DeepCopyInto(out *KubeletConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletConfigObservation.
func (in *KubeletConfigObservation) DeepCopy() *KubeletConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubeletConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletConfigParameters) DeepCopyInto(out *KubeletConfigParameters) {
	*out = *in
	if in.AllowedUnsafeSysctls != nil {
		in, out := &in.AllowedUnsafeSysctls, &out.AllowedUnsafeSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerLogMaxLine != nil {
		in, out := &in.ContainerLogMaxLine, &out.ContainerLogMaxLine
		*out = new(int64)
		**out = **in
	}
	if in.ContainerLogMaxSizeMb != nil {
		in, out := &in.ContainerLogMaxSizeMb, &out.ContainerLogMaxSizeMb
		*out = new(int64)
		**out = **in
	}
	if in.CpuCfsQuotaEnabled != nil {
		in, out := &in.CpuCfsQuotaEnabled, &out.CpuCfsQuotaEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CpuCfsQuotaPeriod != nil {
		in, out := &in.CpuCfsQuotaPeriod, &out.CpuCfsQuotaPeriod
		*out = new(string)
		**out = **in
	}
	if in.CpuManagerPolicy != nil {
		in, out := &in.CpuManagerPolicy, &out.CpuManagerPolicy
		*out = new(string)
		**out = **in
	}
	if in.ImageGcHighThreshold != nil {
		in, out := &in.ImageGcHighThreshold, &out.ImageGcHighThreshold
		*out = new(int64)
		**out = **in
	}
	if in.ImageGcLowThreshold != nil {
		in, out := &in.ImageGcLowThreshold, &out.ImageGcLowThreshold
		*out = new(int64)
		**out = **in
	}
	if in.PodMaxPid != nil {
		in, out := &in.PodMaxPid, &out.PodMaxPid
		*out = new(int64)
		**out = **in
	}
	if in.TopologyManagerPolicy != nil {
		in, out := &in.TopologyManagerPolicy, &out.TopologyManagerPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletConfigParameters.
func (in *KubeletConfigParameters) DeepCopy() *KubeletConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubeletConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletIdentityObservation) DeepCopyInto(out *KubeletIdentityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletIdentityObservation.
func (in *KubeletIdentityObservation) DeepCopy() *KubeletIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(KubeletIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletIdentityParameters) DeepCopyInto(out *KubeletIdentityParameters) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.ObjectId != nil {
		in, out := &in.ObjectId, &out.ObjectId
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityId != nil {
		in, out := &in.UserAssignedIdentityId, &out.UserAssignedIdentityId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletIdentityParameters.
func (in *KubeletIdentityParameters) DeepCopy() *KubeletIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(KubeletIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesCluster) DeepCopyInto(out *KubernetesCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesCluster.
func (in *KubernetesCluster) DeepCopy() *KubernetesCluster {
	if in == nil {
		return nil
	}
	out := new(KubernetesCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubernetesCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterList) DeepCopyInto(out *KubernetesClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KubernetesCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterList.
func (in *KubernetesClusterList) DeepCopy() *KubernetesClusterList {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubernetesClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePool) DeepCopyInto(out *KubernetesClusterNodePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePool.
func (in *KubernetesClusterNodePool) DeepCopy() *KubernetesClusterNodePool {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubernetesClusterNodePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolKubeletConfigObservation) DeepCopyInto(out *KubernetesClusterNodePoolKubeletConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolKubeletConfigObservation.
func (in *KubernetesClusterNodePoolKubeletConfigObservation) DeepCopy() *KubernetesClusterNodePoolKubeletConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolKubeletConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolKubeletConfigParameters) DeepCopyInto(out *KubernetesClusterNodePoolKubeletConfigParameters) {
	*out = *in
	if in.AllowedUnsafeSysctls != nil {
		in, out := &in.AllowedUnsafeSysctls, &out.AllowedUnsafeSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerLogMaxLine != nil {
		in, out := &in.ContainerLogMaxLine, &out.ContainerLogMaxLine
		*out = new(int64)
		**out = **in
	}
	if in.ContainerLogMaxSizeMb != nil {
		in, out := &in.ContainerLogMaxSizeMb, &out.ContainerLogMaxSizeMb
		*out = new(int64)
		**out = **in
	}
	if in.CpuCfsQuotaEnabled != nil {
		in, out := &in.CpuCfsQuotaEnabled, &out.CpuCfsQuotaEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CpuCfsQuotaPeriod != nil {
		in, out := &in.CpuCfsQuotaPeriod, &out.CpuCfsQuotaPeriod
		*out = new(string)
		**out = **in
	}
	if in.CpuManagerPolicy != nil {
		in, out := &in.CpuManagerPolicy, &out.CpuManagerPolicy
		*out = new(string)
		**out = **in
	}
	if in.ImageGcHighThreshold != nil {
		in, out := &in.ImageGcHighThreshold, &out.ImageGcHighThreshold
		*out = new(int64)
		**out = **in
	}
	if in.ImageGcLowThreshold != nil {
		in, out := &in.ImageGcLowThreshold, &out.ImageGcLowThreshold
		*out = new(int64)
		**out = **in
	}
	if in.PodMaxPid != nil {
		in, out := &in.PodMaxPid, &out.PodMaxPid
		*out = new(int64)
		**out = **in
	}
	if in.TopologyManagerPolicy != nil {
		in, out := &in.TopologyManagerPolicy, &out.TopologyManagerPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolKubeletConfigParameters.
func (in *KubernetesClusterNodePoolKubeletConfigParameters) DeepCopy() *KubernetesClusterNodePoolKubeletConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolKubeletConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolLinuxOsConfigObservation) DeepCopyInto(out *KubernetesClusterNodePoolLinuxOsConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolLinuxOsConfigObservation.
func (in *KubernetesClusterNodePoolLinuxOsConfigObservation) DeepCopy() *KubernetesClusterNodePoolLinuxOsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolLinuxOsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolLinuxOsConfigParameters) DeepCopyInto(out *KubernetesClusterNodePoolLinuxOsConfigParameters) {
	*out = *in
	if in.SwapFileSizeMb != nil {
		in, out := &in.SwapFileSizeMb, &out.SwapFileSizeMb
		*out = new(int64)
		**out = **in
	}
	if in.SysctlConfig != nil {
		in, out := &in.SysctlConfig, &out.SysctlConfig
		*out = make([]LinuxOsConfigSysctlConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransparentHugePageDefrag != nil {
		in, out := &in.TransparentHugePageDefrag, &out.TransparentHugePageDefrag
		*out = new(string)
		**out = **in
	}
	if in.TransparentHugePageEnabled != nil {
		in, out := &in.TransparentHugePageEnabled, &out.TransparentHugePageEnabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolLinuxOsConfigParameters.
func (in *KubernetesClusterNodePoolLinuxOsConfigParameters) DeepCopy() *KubernetesClusterNodePoolLinuxOsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolLinuxOsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolList) DeepCopyInto(out *KubernetesClusterNodePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KubernetesClusterNodePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolList.
func (in *KubernetesClusterNodePoolList) DeepCopy() *KubernetesClusterNodePoolList {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubernetesClusterNodePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolObservation) DeepCopyInto(out *KubernetesClusterNodePoolObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolObservation.
func (in *KubernetesClusterNodePoolObservation) DeepCopy() *KubernetesClusterNodePoolObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolParameters) DeepCopyInto(out *KubernetesClusterNodePoolParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableHostEncryption != nil {
		in, out := &in.EnableHostEncryption, &out.EnableHostEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIp != nil {
		in, out := &in.EnableNodePublicIp, &out.EnableNodePublicIp
		*out = new(bool)
		**out = **in
	}
	if in.EvictionPolicy != nil {
		in, out := &in.EvictionPolicy, &out.EvictionPolicy
		*out = new(string)
		**out = **in
	}
	if in.FipsEnabled != nil {
		in, out := &in.FipsEnabled, &out.FipsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = make([]KubernetesClusterNodePoolKubeletConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(string)
		**out = **in
	}
	if in.LinuxOsConfig != nil {
		in, out := &in.LinuxOsConfig, &out.LinuxOsConfig
		*out = make([]KubernetesClusterNodePoolLinuxOsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int64)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIpPrefixId != nil {
		in, out := &in.NodePublicIpPrefixId, &out.NodePublicIpPrefixId
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(int64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetId != nil {
		in, out := &in.PodSubnetId, &out.PodSubnetId
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupId != nil {
		in, out := &in.ProximityPlacementGroupId, &out.ProximityPlacementGroupId
		*out = new(string)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UltraSsdEnabled != nil {
		in, out := &in.UltraSsdEnabled, &out.UltraSsdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = make([]KubernetesClusterNodePoolUpgradeSettingsParameters, len(*in))
		copy(*out, *in)
	}
	if in.VnetSubnetId != nil {
		in, out := &in.VnetSubnetId, &out.VnetSubnetId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolParameters.
func (in *KubernetesClusterNodePoolParameters) DeepCopy() *KubernetesClusterNodePoolParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolSpec) DeepCopyInto(out *KubernetesClusterNodePoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolSpec.
func (in *KubernetesClusterNodePoolSpec) DeepCopy() *KubernetesClusterNodePoolSpec {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolStatus) DeepCopyInto(out *KubernetesClusterNodePoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolStatus.
func (in *KubernetesClusterNodePoolStatus) DeepCopy() *KubernetesClusterNodePoolStatus {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolUpgradeSettingsObservation) DeepCopyInto(out *KubernetesClusterNodePoolUpgradeSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolUpgradeSettingsObservation.
func (in *KubernetesClusterNodePoolUpgradeSettingsObservation) DeepCopy() *KubernetesClusterNodePoolUpgradeSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolUpgradeSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterNodePoolUpgradeSettingsParameters) DeepCopyInto(out *KubernetesClusterNodePoolUpgradeSettingsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterNodePoolUpgradeSettingsParameters.
func (in *KubernetesClusterNodePoolUpgradeSettingsParameters) DeepCopy() *KubernetesClusterNodePoolUpgradeSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterNodePoolUpgradeSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterObservation) DeepCopyInto(out *KubernetesClusterObservation) {
	*out = *in
	if in.KubeAdminConfig != nil {
		in, out := &in.KubeAdminConfig, &out.KubeAdminConfig
		*out = make([]KubeAdminConfigObservation, len(*in))
		copy(*out, *in)
	}
	if in.KubeConfig != nil {
		in, out := &in.KubeConfig, &out.KubeConfig
		*out = make([]KubeConfigObservation, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterObservation.
func (in *KubernetesClusterObservation) DeepCopy() *KubernetesClusterObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterParameters) DeepCopyInto(out *KubernetesClusterParameters) {
	*out = *in
	if in.AddonProfile != nil {
		in, out := &in.AddonProfile, &out.AddonProfile
		*out = make([]AddonProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApiServerAuthorizedIpRanges != nil {
		in, out := &in.ApiServerAuthorizedIpRanges, &out.ApiServerAuthorizedIpRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AutoScalerProfile != nil {
		in, out := &in.AutoScalerProfile, &out.AutoScalerProfile
		*out = make([]AutoScalerProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutomaticChannelUpgrade != nil {
		in, out := &in.AutomaticChannelUpgrade, &out.AutomaticChannelUpgrade
		*out = new(string)
		**out = **in
	}
	if in.DefaultNodePool != nil {
		in, out := &in.DefaultNodePool, &out.DefaultNodePool
		*out = make([]DefaultNodePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryptionSetId != nil {
		in, out := &in.DiskEncryptionSetId, &out.DiskEncryptionSetId
		*out = new(string)
		**out = **in
	}
	if in.DnsPrefix != nil {
		in, out := &in.DnsPrefix, &out.DnsPrefix
		*out = new(string)
		**out = **in
	}
	if in.DnsPrefixPrivateCluster != nil {
		in, out := &in.DnsPrefixPrivateCluster, &out.DnsPrefixPrivateCluster
		*out = new(string)
		**out = **in
	}
	if in.EnablePodSecurityPolicy != nil {
		in, out := &in.EnablePodSecurityPolicy, &out.EnablePodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletIdentity != nil {
		in, out := &in.KubeletIdentity, &out.KubeletIdentity
		*out = make([]KubeletIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxProfile != nil {
		in, out := &in.LinuxProfile, &out.LinuxProfile
		*out = make([]LinuxProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalAccountDisabled != nil {
		in, out := &in.LocalAccountDisabled, &out.LocalAccountDisabled
		*out = new(bool)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = make([]MaintenanceWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkProfile != nil {
		in, out := &in.NetworkProfile, &out.NetworkProfile
		*out = make([]NetworkProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.PrivateClusterEnabled != nil {
		in, out := &in.PrivateClusterEnabled, &out.PrivateClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateClusterPublicFqdnEnabled != nil {
		in, out := &in.PrivateClusterPublicFqdnEnabled, &out.PrivateClusterPublicFqdnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDnsZoneId != nil {
		in, out := &in.PrivateDnsZoneId, &out.PrivateDnsZoneId
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RoleBasedAccessControl != nil {
		in, out := &in.RoleBasedAccessControl, &out.RoleBasedAccessControl
		*out = make([]RoleBasedAccessControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicePrincipal != nil {
		in, out := &in.ServicePrincipal, &out.ServicePrincipal
		*out = make([]ServicePrincipalParameters, len(*in))
		copy(*out, *in)
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.WindowsProfile != nil {
		in, out := &in.WindowsProfile, &out.WindowsProfile
		*out = make([]WindowsProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterParameters.
func (in *KubernetesClusterParameters) DeepCopy() *KubernetesClusterParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpec) DeepCopyInto(out *KubernetesClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpec.
func (in *KubernetesClusterSpec) DeepCopy() *KubernetesClusterSpec {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterStatus) DeepCopyInto(out *KubernetesClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterStatus.
func (in *KubernetesClusterStatus) DeepCopy() *KubernetesClusterStatus {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOsConfigObservation) DeepCopyInto(out *LinuxOsConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOsConfigObservation.
func (in *LinuxOsConfigObservation) DeepCopy() *LinuxOsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxOsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOsConfigParameters) DeepCopyInto(out *LinuxOsConfigParameters) {
	*out = *in
	if in.SwapFileSizeMb != nil {
		in, out := &in.SwapFileSizeMb, &out.SwapFileSizeMb
		*out = new(int64)
		**out = **in
	}
	if in.SysctlConfig != nil {
		in, out := &in.SysctlConfig, &out.SysctlConfig
		*out = make([]SysctlConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransparentHugePageDefrag != nil {
		in, out := &in.TransparentHugePageDefrag, &out.TransparentHugePageDefrag
		*out = new(string)
		**out = **in
	}
	if in.TransparentHugePageEnabled != nil {
		in, out := &in.TransparentHugePageEnabled, &out.TransparentHugePageEnabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOsConfigParameters.
func (in *LinuxOsConfigParameters) DeepCopy() *LinuxOsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxOsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOsConfigSysctlConfigObservation) DeepCopyInto(out *LinuxOsConfigSysctlConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOsConfigSysctlConfigObservation.
func (in *LinuxOsConfigSysctlConfigObservation) DeepCopy() *LinuxOsConfigSysctlConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxOsConfigSysctlConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOsConfigSysctlConfigParameters) DeepCopyInto(out *LinuxOsConfigSysctlConfigParameters) {
	*out = *in
	if in.FsAioMaxNr != nil {
		in, out := &in.FsAioMaxNr, &out.FsAioMaxNr
		*out = new(int64)
		**out = **in
	}
	if in.FsFileMax != nil {
		in, out := &in.FsFileMax, &out.FsFileMax
		*out = new(int64)
		**out = **in
	}
	if in.FsInotifyMaxUserWatches != nil {
		in, out := &in.FsInotifyMaxUserWatches, &out.FsInotifyMaxUserWatches
		*out = new(int64)
		**out = **in
	}
	if in.FsNrOpen != nil {
		in, out := &in.FsNrOpen, &out.FsNrOpen
		*out = new(int64)
		**out = **in
	}
	if in.KernelThreadsMax != nil {
		in, out := &in.KernelThreadsMax, &out.KernelThreadsMax
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreNetdevMaxBacklog != nil {
		in, out := &in.NetCoreNetdevMaxBacklog, &out.NetCoreNetdevMaxBacklog
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreOptmemMax != nil {
		in, out := &in.NetCoreOptmemMax, &out.NetCoreOptmemMax
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreRmemDefault != nil {
		in, out := &in.NetCoreRmemDefault, &out.NetCoreRmemDefault
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreRmemMax != nil {
		in, out := &in.NetCoreRmemMax, &out.NetCoreRmemMax
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreSomaxconn != nil {
		in, out := &in.NetCoreSomaxconn, &out.NetCoreSomaxconn
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreWmemDefault != nil {
		in, out := &in.NetCoreWmemDefault, &out.NetCoreWmemDefault
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreWmemMax != nil {
		in, out := &in.NetCoreWmemMax, &out.NetCoreWmemMax
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRangeMax != nil {
		in, out := &in.NetIpv4IpLocalPortRangeMax, &out.NetIpv4IpLocalPortRangeMax
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRangeMin != nil {
		in, out := &in.NetIpv4IpLocalPortRangeMin, &out.NetIpv4IpLocalPortRangeMin
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh1 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh1, &out.NetIpv4NeighDefaultGcThresh1
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh2 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh2, &out.NetIpv4NeighDefaultGcThresh2
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh3 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh3, &out.NetIpv4NeighDefaultGcThresh3
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpFinTimeout != nil {
		in, out := &in.NetIpv4TcpFinTimeout, &out.NetIpv4TcpFinTimeout
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveIntvl != nil {
		in, out := &in.NetIpv4TcpKeepaliveIntvl, &out.NetIpv4TcpKeepaliveIntvl
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveProbes != nil {
		in, out := &in.NetIpv4TcpKeepaliveProbes, &out.NetIpv4TcpKeepaliveProbes
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveTime != nil {
		in, out := &in.NetIpv4TcpKeepaliveTime, &out.NetIpv4TcpKeepaliveTime
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpMaxSynBacklog != nil {
		in, out := &in.NetIpv4TcpMaxSynBacklog, &out.NetIpv4TcpMaxSynBacklog
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpMaxTwBuckets != nil {
		in, out := &in.NetIpv4TcpMaxTwBuckets, &out.NetIpv4TcpMaxTwBuckets
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpTwReuse != nil {
		in, out := &in.NetIpv4TcpTwReuse, &out.NetIpv4TcpTwReuse
		*out = new(bool)
		**out = **in
	}
	if in.NetNetfilterNfConntrackBuckets != nil {
		in, out := &in.NetNetfilterNfConntrackBuckets, &out.NetNetfilterNfConntrackBuckets
		*out = new(int64)
		**out = **in
	}
	if in.NetNetfilterNfConntrackMax != nil {
		in, out := &in.NetNetfilterNfConntrackMax, &out.NetNetfilterNfConntrackMax
		*out = new(int64)
		**out = **in
	}
	if in.VmMaxMapCount != nil {
		in, out := &in.VmMaxMapCount, &out.VmMaxMapCount
		*out = new(int64)
		**out = **in
	}
	if in.VmSwappiness != nil {
		in, out := &in.VmSwappiness, &out.VmSwappiness
		*out = new(int64)
		**out = **in
	}
	if in.VmVfsCachePressure != nil {
		in, out := &in.VmVfsCachePressure, &out.VmVfsCachePressure
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOsConfigSysctlConfigParameters.
func (in *LinuxOsConfigSysctlConfigParameters) DeepCopy() *LinuxOsConfigSysctlConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxOsConfigSysctlConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxProfileObservation) DeepCopyInto(out *LinuxProfileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxProfileObservation.
func (in *LinuxProfileObservation) DeepCopy() *LinuxProfileObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxProfileParameters) DeepCopyInto(out *LinuxProfileParameters) {
	*out = *in
	if in.SshKey != nil {
		in, out := &in.SshKey, &out.SshKey
		*out = make([]SshKeyParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxProfileParameters.
func (in *LinuxProfileParameters) DeepCopy() *LinuxProfileParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProfileObservation) DeepCopyInto(out *LoadBalancerProfileObservation) {
	*out = *in
	if in.EffectiveOutboundIps != nil {
		in, out := &in.EffectiveOutboundIps, &out.EffectiveOutboundIps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProfileObservation.
func (in *LoadBalancerProfileObservation) DeepCopy() *LoadBalancerProfileObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerProfileParameters) DeepCopyInto(out *LoadBalancerProfileParameters) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int64)
		**out = **in
	}
	if in.ManagedOutboundIpCount != nil {
		in, out := &in.ManagedOutboundIpCount, &out.ManagedOutboundIpCount
		*out = new(int64)
		**out = **in
	}
	if in.OutboundIpAddressIds != nil {
		in, out := &in.OutboundIpAddressIds, &out.OutboundIpAddressIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OutboundIpPrefixIds != nil {
		in, out := &in.OutboundIpPrefixIds, &out.OutboundIpPrefixIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OutboundPortsAllocated != nil {
		in, out := &in.OutboundPortsAllocated, &out.OutboundPortsAllocated
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerProfileParameters.
func (in *LoadBalancerProfileParameters) DeepCopy() *LoadBalancerProfileParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowObservation) DeepCopyInto(out *MaintenanceWindowObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowObservation.
func (in *MaintenanceWindowObservation) DeepCopy() *MaintenanceWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowParameters) DeepCopyInto(out *MaintenanceWindowParameters) {
	*out = *in
	if in.Allowed != nil {
		in, out := &in.Allowed, &out.Allowed
		*out = make([]AllowedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotAllowed != nil {
		in, out := &in.NotAllowed, &out.NotAllowed
		*out = make([]NotAllowedParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowParameters.
func (in *MaintenanceWindowParameters) DeepCopy() *MaintenanceWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkProfileObservation) DeepCopyInto(out *NetworkProfileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkProfileObservation.
func (in *NetworkProfileObservation) DeepCopy() *NetworkProfileObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkProfileParameters) DeepCopyInto(out *NetworkProfileParameters) {
	*out = *in
	if in.DnsServiceIp != nil {
		in, out := &in.DnsServiceIp, &out.DnsServiceIp
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerProfile != nil {
		in, out := &in.LoadBalancerProfile, &out.LoadBalancerProfile
		*out = make([]LoadBalancerProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.OutboundType != nil {
		in, out := &in.OutboundType, &out.OutboundType
		*out = new(string)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = new(string)
		**out = **in
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkProfileParameters.
func (in *NetworkProfileParameters) DeepCopy() *NetworkProfileParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotAllowedObservation) DeepCopyInto(out *NotAllowedObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotAllowedObservation.
func (in *NotAllowedObservation) DeepCopy() *NotAllowedObservation {
	if in == nil {
		return nil
	}
	out := new(NotAllowedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotAllowedParameters) DeepCopyInto(out *NotAllowedParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotAllowedParameters.
func (in *NotAllowedParameters) DeepCopy() *NotAllowedParameters {
	if in == nil {
		return nil
	}
	out := new(NotAllowedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OmsAgentIdentityObservation) DeepCopyInto(out *OmsAgentIdentityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OmsAgentIdentityObservation.
func (in *OmsAgentIdentityObservation) DeepCopy() *OmsAgentIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(OmsAgentIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OmsAgentIdentityParameters) DeepCopyInto(out *OmsAgentIdentityParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OmsAgentIdentityParameters.
func (in *OmsAgentIdentityParameters) DeepCopy() *OmsAgentIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(OmsAgentIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OmsAgentObservation) DeepCopyInto(out *OmsAgentObservation) {
	*out = *in
	if in.OmsAgentIdentity != nil {
		in, out := &in.OmsAgentIdentity, &out.OmsAgentIdentity
		*out = make([]OmsAgentIdentityObservation, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OmsAgentObservation.
func (in *OmsAgentObservation) DeepCopy() *OmsAgentObservation {
	if in == nil {
		return nil
	}
	out := new(OmsAgentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OmsAgentParameters) DeepCopyInto(out *OmsAgentParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceId != nil {
		in, out := &in.LogAnalyticsWorkspaceId, &out.LogAnalyticsWorkspaceId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OmsAgentParameters.
func (in *OmsAgentParameters) DeepCopy() *OmsAgentParameters {
	if in == nil {
		return nil
	}
	out := new(OmsAgentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBasedAccessControlObservation) DeepCopyInto(out *RoleBasedAccessControlObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBasedAccessControlObservation.
func (in *RoleBasedAccessControlObservation) DeepCopy() *RoleBasedAccessControlObservation {
	if in == nil {
		return nil
	}
	out := new(RoleBasedAccessControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBasedAccessControlParameters) DeepCopyInto(out *RoleBasedAccessControlParameters) {
	*out = *in
	if in.AzureActiveDirectory != nil {
		in, out := &in.AzureActiveDirectory, &out.AzureActiveDirectory
		*out = make([]AzureActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBasedAccessControlParameters.
func (in *RoleBasedAccessControlParameters) DeepCopy() *RoleBasedAccessControlParameters {
	if in == nil {
		return nil
	}
	out := new(RoleBasedAccessControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalObservation) DeepCopyInto(out *ServicePrincipalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalObservation.
func (in *ServicePrincipalObservation) DeepCopy() *ServicePrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalParameters) DeepCopyInto(out *ServicePrincipalParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalParameters.
func (in *ServicePrincipalParameters) DeepCopy() *ServicePrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshKeyObservation) DeepCopyInto(out *SshKeyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshKeyObservation.
func (in *SshKeyObservation) DeepCopy() *SshKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SshKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshKeyParameters) DeepCopyInto(out *SshKeyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshKeyParameters.
func (in *SshKeyParameters) DeepCopy() *SshKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SshKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlConfigObservation) DeepCopyInto(out *SysctlConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlConfigObservation.
func (in *SysctlConfigObservation) DeepCopy() *SysctlConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SysctlConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlConfigParameters) DeepCopyInto(out *SysctlConfigParameters) {
	*out = *in
	if in.FsAioMaxNr != nil {
		in, out := &in.FsAioMaxNr, &out.FsAioMaxNr
		*out = new(int64)
		**out = **in
	}
	if in.FsFileMax != nil {
		in, out := &in.FsFileMax, &out.FsFileMax
		*out = new(int64)
		**out = **in
	}
	if in.FsInotifyMaxUserWatches != nil {
		in, out := &in.FsInotifyMaxUserWatches, &out.FsInotifyMaxUserWatches
		*out = new(int64)
		**out = **in
	}
	if in.FsNrOpen != nil {
		in, out := &in.FsNrOpen, &out.FsNrOpen
		*out = new(int64)
		**out = **in
	}
	if in.KernelThreadsMax != nil {
		in, out := &in.KernelThreadsMax, &out.KernelThreadsMax
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreNetdevMaxBacklog != nil {
		in, out := &in.NetCoreNetdevMaxBacklog, &out.NetCoreNetdevMaxBacklog
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreOptmemMax != nil {
		in, out := &in.NetCoreOptmemMax, &out.NetCoreOptmemMax
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreRmemDefault != nil {
		in, out := &in.NetCoreRmemDefault, &out.NetCoreRmemDefault
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreRmemMax != nil {
		in, out := &in.NetCoreRmemMax, &out.NetCoreRmemMax
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreSomaxconn != nil {
		in, out := &in.NetCoreSomaxconn, &out.NetCoreSomaxconn
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreWmemDefault != nil {
		in, out := &in.NetCoreWmemDefault, &out.NetCoreWmemDefault
		*out = new(int64)
		**out = **in
	}
	if in.NetCoreWmemMax != nil {
		in, out := &in.NetCoreWmemMax, &out.NetCoreWmemMax
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRangeMax != nil {
		in, out := &in.NetIpv4IpLocalPortRangeMax, &out.NetIpv4IpLocalPortRangeMax
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRangeMin != nil {
		in, out := &in.NetIpv4IpLocalPortRangeMin, &out.NetIpv4IpLocalPortRangeMin
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh1 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh1, &out.NetIpv4NeighDefaultGcThresh1
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh2 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh2, &out.NetIpv4NeighDefaultGcThresh2
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh3 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh3, &out.NetIpv4NeighDefaultGcThresh3
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpFinTimeout != nil {
		in, out := &in.NetIpv4TcpFinTimeout, &out.NetIpv4TcpFinTimeout
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveIntvl != nil {
		in, out := &in.NetIpv4TcpKeepaliveIntvl, &out.NetIpv4TcpKeepaliveIntvl
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveProbes != nil {
		in, out := &in.NetIpv4TcpKeepaliveProbes, &out.NetIpv4TcpKeepaliveProbes
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveTime != nil {
		in, out := &in.NetIpv4TcpKeepaliveTime, &out.NetIpv4TcpKeepaliveTime
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpMaxSynBacklog != nil {
		in, out := &in.NetIpv4TcpMaxSynBacklog, &out.NetIpv4TcpMaxSynBacklog
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpMaxTwBuckets != nil {
		in, out := &in.NetIpv4TcpMaxTwBuckets, &out.NetIpv4TcpMaxTwBuckets
		*out = new(int64)
		**out = **in
	}
	if in.NetIpv4TcpTwReuse != nil {
		in, out := &in.NetIpv4TcpTwReuse, &out.NetIpv4TcpTwReuse
		*out = new(bool)
		**out = **in
	}
	if in.NetNetfilterNfConntrackBuckets != nil {
		in, out := &in.NetNetfilterNfConntrackBuckets, &out.NetNetfilterNfConntrackBuckets
		*out = new(int64)
		**out = **in
	}
	if in.NetNetfilterNfConntrackMax != nil {
		in, out := &in.NetNetfilterNfConntrackMax, &out.NetNetfilterNfConntrackMax
		*out = new(int64)
		**out = **in
	}
	if in.VmMaxMapCount != nil {
		in, out := &in.VmMaxMapCount, &out.VmMaxMapCount
		*out = new(int64)
		**out = **in
	}
	if in.VmSwappiness != nil {
		in, out := &in.VmSwappiness, &out.VmSwappiness
		*out = new(int64)
		**out = **in
	}
	if in.VmVfsCachePressure != nil {
		in, out := &in.VmVfsCachePressure, &out.VmVfsCachePressure
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlConfigParameters.
func (in *SysctlConfigParameters) DeepCopy() *SysctlConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SysctlConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeSettingsObservation) DeepCopyInto(out *UpgradeSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeSettingsObservation.
func (in *UpgradeSettingsObservation) DeepCopy() *UpgradeSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeSettingsParameters) DeepCopyInto(out *UpgradeSettingsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeSettingsParameters.
func (in *UpgradeSettingsParameters) DeepCopy() *UpgradeSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsProfileObservation) DeepCopyInto(out *WindowsProfileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsProfileObservation.
func (in *WindowsProfileObservation) DeepCopy() *WindowsProfileObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsProfileParameters) DeepCopyInto(out *WindowsProfileParameters) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.License != nil {
		in, out := &in.License, &out.License
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsProfileParameters.
func (in *WindowsProfileParameters) DeepCopy() *WindowsProfileParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsProfileParameters)
	in.DeepCopyInto(out)
	return out
}
