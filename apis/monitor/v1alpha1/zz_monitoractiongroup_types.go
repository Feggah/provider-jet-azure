/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AadAuthObservation struct {
}

type AadAuthParameters struct {
	IdentifierURI *string `json:"identifierUri,omitempty" tf:"identifier_uri"`

	ObjectID string `json:"objectId" tf:"object_id"`

	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id"`
}

type ArmRoleReceiverObservation struct {
}

type ArmRoleReceiverParameters struct {
	Name string `json:"name" tf:"name"`

	RoleID string `json:"roleId" tf:"role_id"`

	UseCommonAlertSchema *bool `json:"useCommonAlertSchema,omitempty" tf:"use_common_alert_schema"`
}

type AutomationRunbookReceiverObservation struct {
}

type AutomationRunbookReceiverParameters struct {
	AutomationAccountID string `json:"automationAccountId" tf:"automation_account_id"`

	IsGlobalRunbook bool `json:"isGlobalRunbook" tf:"is_global_runbook"`

	Name string `json:"name" tf:"name"`

	RunbookName string `json:"runbookName" tf:"runbook_name"`

	ServiceURI string `json:"serviceUri" tf:"service_uri"`

	UseCommonAlertSchema *bool `json:"useCommonAlertSchema,omitempty" tf:"use_common_alert_schema"`

	WebhookResourceID string `json:"webhookResourceId" tf:"webhook_resource_id"`
}

type AzureAppPushReceiverObservation struct {
}

type AzureAppPushReceiverParameters struct {
	EmailAddress string `json:"emailAddress" tf:"email_address"`

	Name string `json:"name" tf:"name"`
}

type AzureFunctionReceiverObservation struct {
}

type AzureFunctionReceiverParameters struct {
	FunctionAppResourceID string `json:"functionAppResourceId" tf:"function_app_resource_id"`

	FunctionName string `json:"functionName" tf:"function_name"`

	HTTPTriggerURL string `json:"httpTriggerUrl" tf:"http_trigger_url"`

	Name string `json:"name" tf:"name"`

	UseCommonAlertSchema *bool `json:"useCommonAlertSchema,omitempty" tf:"use_common_alert_schema"`
}

type EmailReceiverObservation struct {
}

type EmailReceiverParameters struct {
	EmailAddress string `json:"emailAddress" tf:"email_address"`

	Name string `json:"name" tf:"name"`

	UseCommonAlertSchema *bool `json:"useCommonAlertSchema,omitempty" tf:"use_common_alert_schema"`
}

type ItsmReceiverObservation struct {
}

type ItsmReceiverParameters struct {
	ConnectionID string `json:"connectionId" tf:"connection_id"`

	Name string `json:"name" tf:"name"`

	Region string `json:"region" tf:"region"`

	TicketConfiguration string `json:"ticketConfiguration" tf:"ticket_configuration"`

	WorkspaceID string `json:"workspaceId" tf:"workspace_id"`
}

type LogicAppReceiverObservation struct {
}

type LogicAppReceiverParameters struct {
	CallbackURL string `json:"callbackUrl" tf:"callback_url"`

	Name string `json:"name" tf:"name"`

	ResourceID string `json:"resourceId" tf:"resource_id"`

	UseCommonAlertSchema *bool `json:"useCommonAlertSchema,omitempty" tf:"use_common_alert_schema"`
}

type MonitorActionGroupObservation struct {
}

type MonitorActionGroupParameters struct {
	ArmRoleReceiver []ArmRoleReceiverParameters `json:"armRoleReceiver,omitempty" tf:"arm_role_receiver"`

	AutomationRunbookReceiver []AutomationRunbookReceiverParameters `json:"automationRunbookReceiver,omitempty" tf:"automation_runbook_receiver"`

	AzureAppPushReceiver []AzureAppPushReceiverParameters `json:"azureAppPushReceiver,omitempty" tf:"azure_app_push_receiver"`

	AzureFunctionReceiver []AzureFunctionReceiverParameters `json:"azureFunctionReceiver,omitempty" tf:"azure_function_receiver"`

	EmailReceiver []EmailReceiverParameters `json:"emailReceiver,omitempty" tf:"email_receiver"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`

	ItsmReceiver []ItsmReceiverParameters `json:"itsmReceiver,omitempty" tf:"itsm_receiver"`

	LogicAppReceiver []LogicAppReceiverParameters `json:"logicAppReceiver,omitempty" tf:"logic_app_receiver"`

	Name string `json:"name" tf:"name"`

	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	ShortName string `json:"shortName" tf:"short_name"`

	SmsReceiver []SmsReceiverParameters `json:"smsReceiver,omitempty" tf:"sms_receiver"`

	Tags map[string]string `json:"tags,omitempty" tf:"tags"`

	VoiceReceiver []VoiceReceiverParameters `json:"voiceReceiver,omitempty" tf:"voice_receiver"`

	WebhookReceiver []WebhookReceiverParameters `json:"webhookReceiver,omitempty" tf:"webhook_receiver"`
}

type SmsReceiverObservation struct {
}

type SmsReceiverParameters struct {
	CountryCode string `json:"countryCode" tf:"country_code"`

	Name string `json:"name" tf:"name"`

	PhoneNumber string `json:"phoneNumber" tf:"phone_number"`
}

type VoiceReceiverObservation struct {
}

type VoiceReceiverParameters struct {
	CountryCode string `json:"countryCode" tf:"country_code"`

	Name string `json:"name" tf:"name"`

	PhoneNumber string `json:"phoneNumber" tf:"phone_number"`
}

type WebhookReceiverObservation struct {
}

type WebhookReceiverParameters struct {
	AadAuth []AadAuthParameters `json:"aadAuth,omitempty" tf:"aad_auth"`

	Name string `json:"name" tf:"name"`

	ServiceURI string `json:"serviceUri" tf:"service_uri"`

	UseCommonAlertSchema *bool `json:"useCommonAlertSchema,omitempty" tf:"use_common_alert_schema"`
}

// MonitorActionGroupSpec defines the desired state of MonitorActionGroup
type MonitorActionGroupSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       MonitorActionGroupParameters `json:"forProvider"`
}

// MonitorActionGroupStatus defines the observed state of MonitorActionGroup.
type MonitorActionGroupStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          MonitorActionGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorActionGroup is the Schema for the MonitorActionGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type MonitorActionGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MonitorActionGroupSpec   `json:"spec"`
	Status            MonitorActionGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorActionGroupList contains a list of MonitorActionGroups
type MonitorActionGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MonitorActionGroup `json:"items"`
}

// Repository type metadata.
var (
	MonitorActionGroupKind             = "MonitorActionGroup"
	MonitorActionGroupGroupKind        = schema.GroupKind{Group: Group, Kind: MonitorActionGroupKind}.String()
	MonitorActionGroupKindAPIVersion   = MonitorActionGroupKind + "." + GroupVersion.String()
	MonitorActionGroupGroupVersionKind = GroupVersion.WithKind(MonitorActionGroupKind)
)

func init() {
	SchemeBuilder.Register(&MonitorActionGroup{}, &MonitorActionGroupList{})
}
