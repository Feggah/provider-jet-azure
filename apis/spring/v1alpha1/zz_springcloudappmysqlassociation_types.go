/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SpringCloudAppMysqlAssociationObservation struct {
}

type SpringCloudAppMysqlAssociationParameters struct {

	// +kubebuilder:validation:Required
	DatabaseName *string `json:"databaseName" tf:"database_name,omitempty"`

	// +kubebuilder:validation:Required
	MysqlServerID *string `json:"mysqlServerId" tf:"mysql_server_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	SpringCloudAppID *string `json:"springCloudAppId" tf:"spring_cloud_app_id,omitempty"`

	// +kubebuilder:validation:Required
	Username *string `json:"username" tf:"username,omitempty"`
}

// SpringCloudAppMysqlAssociationSpec defines the desired state of SpringCloudAppMysqlAssociation
type SpringCloudAppMysqlAssociationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SpringCloudAppMysqlAssociationParameters `json:"forProvider"`
}

// SpringCloudAppMysqlAssociationStatus defines the observed state of SpringCloudAppMysqlAssociation.
type SpringCloudAppMysqlAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SpringCloudAppMysqlAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SpringCloudAppMysqlAssociation is the Schema for the SpringCloudAppMysqlAssociations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type SpringCloudAppMysqlAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SpringCloudAppMysqlAssociationSpec   `json:"spec"`
	Status            SpringCloudAppMysqlAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SpringCloudAppMysqlAssociationList contains a list of SpringCloudAppMysqlAssociations
type SpringCloudAppMysqlAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SpringCloudAppMysqlAssociation `json:"items"`
}

// Repository type metadata.
var (
	SpringCloudAppMysqlAssociationKind             = "SpringCloudAppMysqlAssociation"
	SpringCloudAppMysqlAssociationGroupKind        = schema.GroupKind{Group: Group, Kind: SpringCloudAppMysqlAssociationKind}.String()
	SpringCloudAppMysqlAssociationKindAPIVersion   = SpringCloudAppMysqlAssociationKind + "." + GroupVersion.String()
	SpringCloudAppMysqlAssociationGroupVersionKind = GroupVersion.WithKind(SpringCloudAppMysqlAssociationKind)
)

func init() {
	SchemeBuilder.Register(&SpringCloudAppMysqlAssociation{}, &SpringCloudAppMysqlAssociationList{})
}
