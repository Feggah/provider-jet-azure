/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseFirewallRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseFirewallRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseFirewallRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseFirewallRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseFirewallRule.
func (mg *SynapseFirewallRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseIntegrationRuntimeAzure.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseIntegrationRuntimeAzure) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseIntegrationRuntimeAzure.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseIntegrationRuntimeAzure) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseIntegrationRuntimeAzure.
func (mg *SynapseIntegrationRuntimeAzure) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseIntegrationRuntimeSelfHosted.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseIntegrationRuntimeSelfHosted) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseIntegrationRuntimeSelfHosted.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseIntegrationRuntimeSelfHosted) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseIntegrationRuntimeSelfHosted.
func (mg *SynapseIntegrationRuntimeSelfHosted) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseLinkedService.
func (mg *SynapseLinkedService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseLinkedService.
func (mg *SynapseLinkedService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseLinkedService.
func (mg *SynapseLinkedService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseLinkedService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseLinkedService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseLinkedService.
func (mg *SynapseLinkedService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseLinkedService.
func (mg *SynapseLinkedService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseLinkedService.
func (mg *SynapseLinkedService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseLinkedService.
func (mg *SynapseLinkedService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseLinkedService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseLinkedService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseLinkedService.
func (mg *SynapseLinkedService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseManagedPrivateEndpoint.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseManagedPrivateEndpoint) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseManagedPrivateEndpoint.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseManagedPrivateEndpoint) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseManagedPrivateEndpoint.
func (mg *SynapseManagedPrivateEndpoint) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapsePrivateLinkHub.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapsePrivateLinkHub) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapsePrivateLinkHub.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapsePrivateLinkHub) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapsePrivateLinkHub.
func (mg *SynapsePrivateLinkHub) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseRoleAssignment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseRoleAssignment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseRoleAssignment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseRoleAssignment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseRoleAssignment.
func (mg *SynapseRoleAssignment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseSparkPool.
func (mg *SynapseSparkPool) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseSparkPool.
func (mg *SynapseSparkPool) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseSparkPool.
func (mg *SynapseSparkPool) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseSparkPool.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseSparkPool) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseSparkPool.
func (mg *SynapseSparkPool) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseSparkPool.
func (mg *SynapseSparkPool) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseSparkPool.
func (mg *SynapseSparkPool) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseSparkPool.
func (mg *SynapseSparkPool) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseSparkPool.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseSparkPool) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseSparkPool.
func (mg *SynapseSparkPool) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseSqlPool.
func (mg *SynapseSqlPool) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseSqlPool.
func (mg *SynapseSqlPool) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseSqlPool.
func (mg *SynapseSqlPool) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseSqlPool.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseSqlPool) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseSqlPool.
func (mg *SynapseSqlPool) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseSqlPool.
func (mg *SynapseSqlPool) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseSqlPool.
func (mg *SynapseSqlPool) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseSqlPool.
func (mg *SynapseSqlPool) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseSqlPool.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseSqlPool) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseSqlPool.
func (mg *SynapseSqlPool) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseSqlPoolExtendedAuditingPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseSqlPoolExtendedAuditingPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseSqlPoolExtendedAuditingPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseSqlPoolExtendedAuditingPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseSqlPoolExtendedAuditingPolicy.
func (mg *SynapseSqlPoolExtendedAuditingPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseSqlPoolSecurityAlertPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseSqlPoolSecurityAlertPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseSqlPoolSecurityAlertPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseSqlPoolSecurityAlertPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseSqlPoolSecurityAlertPolicy.
func (mg *SynapseSqlPoolSecurityAlertPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseSqlPoolVulnerabilityAssessment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseSqlPoolVulnerabilityAssessment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseSqlPoolVulnerabilityAssessment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseSqlPoolVulnerabilityAssessment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseSqlPoolVulnerabilityAssessment.
func (mg *SynapseSqlPoolVulnerabilityAssessment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseWorkspace.
func (mg *SynapseWorkspace) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseWorkspace.
func (mg *SynapseWorkspace) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseWorkspace.
func (mg *SynapseWorkspace) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseWorkspace.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseWorkspace) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseWorkspace.
func (mg *SynapseWorkspace) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseWorkspace.
func (mg *SynapseWorkspace) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseWorkspace.
func (mg *SynapseWorkspace) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseWorkspace.
func (mg *SynapseWorkspace) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseWorkspace.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseWorkspace) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseWorkspace.
func (mg *SynapseWorkspace) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseWorkspaceExtendedAuditingPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseWorkspaceExtendedAuditingPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseWorkspaceExtendedAuditingPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseWorkspaceExtendedAuditingPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseWorkspaceExtendedAuditingPolicy.
func (mg *SynapseWorkspaceExtendedAuditingPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseWorkspaceKey.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseWorkspaceKey) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseWorkspaceKey.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseWorkspaceKey) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseWorkspaceKey.
func (mg *SynapseWorkspaceKey) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseWorkspaceSecurityAlertPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseWorkspaceSecurityAlertPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseWorkspaceSecurityAlertPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseWorkspaceSecurityAlertPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseWorkspaceSecurityAlertPolicy.
func (mg *SynapseWorkspaceSecurityAlertPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SynapseWorkspaceVulnerabilityAssessment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SynapseWorkspaceVulnerabilityAssessment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SynapseWorkspaceVulnerabilityAssessment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SynapseWorkspaceVulnerabilityAssessment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SynapseWorkspaceVulnerabilityAssessment.
func (mg *SynapseWorkspaceVulnerabilityAssessment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
