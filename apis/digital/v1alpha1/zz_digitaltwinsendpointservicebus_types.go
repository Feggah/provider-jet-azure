/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DigitalTwinsEndpointServicebusObservation struct {
}

type DigitalTwinsEndpointServicebusParameters struct {

	// +kubebuilder:validation:Optional
	DeadLetterStorageSecretSecretRef v1.SecretKeySelector `json:"deadLetterStorageSecretSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Required
	DigitalTwinsID *string `json:"digitalTwinsId" tf:"digital_twins_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	ServicebusPrimaryConnectionStringSecretRef v1.SecretKeySelector `json:"servicebusPrimaryConnectionStringSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	ServicebusSecondaryConnectionStringSecretRef v1.SecretKeySelector `json:"servicebusSecondaryConnectionStringSecretRef" tf:"-"`
}

// DigitalTwinsEndpointServicebusSpec defines the desired state of DigitalTwinsEndpointServicebus
type DigitalTwinsEndpointServicebusSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DigitalTwinsEndpointServicebusParameters `json:"forProvider"`
}

// DigitalTwinsEndpointServicebusStatus defines the observed state of DigitalTwinsEndpointServicebus.
type DigitalTwinsEndpointServicebusStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DigitalTwinsEndpointServicebusObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DigitalTwinsEndpointServicebus is the Schema for the DigitalTwinsEndpointServicebuss API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type DigitalTwinsEndpointServicebus struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DigitalTwinsEndpointServicebusSpec   `json:"spec"`
	Status            DigitalTwinsEndpointServicebusStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DigitalTwinsEndpointServicebusList contains a list of DigitalTwinsEndpointServicebuss
type DigitalTwinsEndpointServicebusList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DigitalTwinsEndpointServicebus `json:"items"`
}

// Repository type metadata.
var (
	DigitalTwinsEndpointServicebusKind             = "DigitalTwinsEndpointServicebus"
	DigitalTwinsEndpointServicebusGroupKind        = schema.GroupKind{Group: Group, Kind: DigitalTwinsEndpointServicebusKind}.String()
	DigitalTwinsEndpointServicebusKindAPIVersion   = DigitalTwinsEndpointServicebusKind + "." + GroupVersion.String()
	DigitalTwinsEndpointServicebusGroupVersionKind = GroupVersion.WithKind(DigitalTwinsEndpointServicebusKind)
)

func init() {
	SchemeBuilder.Register(&DigitalTwinsEndpointServicebus{}, &DigitalTwinsEndpointServicebusList{})
}
