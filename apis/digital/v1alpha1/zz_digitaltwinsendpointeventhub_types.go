/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DigitalTwinsEndpointEventhubObservation struct {
}

type DigitalTwinsEndpointEventhubParameters struct {

	// +kubebuilder:validation:Optional
	DeadLetterStorageSecretSecretRef v1.SecretKeySelector `json:"deadLetterStorageSecretSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Required
	DigitalTwinsID *string `json:"digitalTwinsId" tf:"digital_twins_id,omitempty"`

	// +kubebuilder:validation:Required
	EventhubPrimaryConnectionStringSecretRef v1.SecretKeySelector `json:"eventhubPrimaryConnectionStringSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	EventhubSecondaryConnectionStringSecretRef v1.SecretKeySelector `json:"eventhubSecondaryConnectionStringSecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

// DigitalTwinsEndpointEventhubSpec defines the desired state of DigitalTwinsEndpointEventhub
type DigitalTwinsEndpointEventhubSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DigitalTwinsEndpointEventhubParameters `json:"forProvider"`
}

// DigitalTwinsEndpointEventhubStatus defines the observed state of DigitalTwinsEndpointEventhub.
type DigitalTwinsEndpointEventhubStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DigitalTwinsEndpointEventhubObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DigitalTwinsEndpointEventhub is the Schema for the DigitalTwinsEndpointEventhubs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type DigitalTwinsEndpointEventhub struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DigitalTwinsEndpointEventhubSpec   `json:"spec"`
	Status            DigitalTwinsEndpointEventhubStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DigitalTwinsEndpointEventhubList contains a list of DigitalTwinsEndpointEventhubs
type DigitalTwinsEndpointEventhubList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DigitalTwinsEndpointEventhub `json:"items"`
}

// Repository type metadata.
var (
	DigitalTwinsEndpointEventhubKind             = "DigitalTwinsEndpointEventhub"
	DigitalTwinsEndpointEventhubGroupKind        = schema.GroupKind{Group: Group, Kind: DigitalTwinsEndpointEventhubKind}.String()
	DigitalTwinsEndpointEventhubKindAPIVersion   = DigitalTwinsEndpointEventhubKind + "." + GroupVersion.String()
	DigitalTwinsEndpointEventhubGroupVersionKind = GroupVersion.WithKind(DigitalTwinsEndpointEventhubKind)
)

func init() {
	SchemeBuilder.Register(&DigitalTwinsEndpointEventhub{}, &DigitalTwinsEndpointEventhubList{})
}
