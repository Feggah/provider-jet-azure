/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AdvancedFilterBoolEqualsObservation struct {
}

type AdvancedFilterBoolEqualsParameters struct {
	Key string `json:"key" tf:"key"`

	Value bool `json:"value" tf:"value"`
}

type AdvancedFilterIsNotNullObservation struct {
}

type AdvancedFilterIsNotNullParameters struct {
	Key string `json:"key" tf:"key"`
}

type AdvancedFilterIsNullOrUndefinedObservation struct {
}

type AdvancedFilterIsNullOrUndefinedParameters struct {
	Key string `json:"key" tf:"key"`
}

type AdvancedFilterNumberGreaterThanObservation struct {
}

type AdvancedFilterNumberGreaterThanOrEqualsObservation struct {
}

type AdvancedFilterNumberGreaterThanOrEqualsParameters struct {
	Key string `json:"key" tf:"key"`

	Value float64 `json:"value" tf:"value"`
}

type AdvancedFilterNumberGreaterThanParameters struct {
	Key string `json:"key" tf:"key"`

	Value float64 `json:"value" tf:"value"`
}

type AdvancedFilterNumberInObservation struct {
}

type AdvancedFilterNumberInParameters struct {
	Key string `json:"key" tf:"key"`

	Values []float64 `json:"values" tf:"values"`
}

type AdvancedFilterNumberInRangeObservation struct {
}

type AdvancedFilterNumberInRangeParameters struct {
	Key string `json:"key" tf:"key"`

	Values [][]float64 `json:"values" tf:"values"`
}

type AdvancedFilterNumberLessThanObservation struct {
}

type AdvancedFilterNumberLessThanOrEqualsObservation struct {
}

type AdvancedFilterNumberLessThanOrEqualsParameters struct {
	Key string `json:"key" tf:"key"`

	Value float64 `json:"value" tf:"value"`
}

type AdvancedFilterNumberLessThanParameters struct {
	Key string `json:"key" tf:"key"`

	Value float64 `json:"value" tf:"value"`
}

type AdvancedFilterNumberNotInObservation struct {
}

type AdvancedFilterNumberNotInParameters struct {
	Key string `json:"key" tf:"key"`

	Values []float64 `json:"values" tf:"values"`
}

type AdvancedFilterNumberNotInRangeObservation struct {
}

type AdvancedFilterNumberNotInRangeParameters struct {
	Key string `json:"key" tf:"key"`

	Values [][]float64 `json:"values" tf:"values"`
}

type AdvancedFilterStringBeginsWithObservation struct {
}

type AdvancedFilterStringBeginsWithParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type AdvancedFilterStringContainsObservation struct {
}

type AdvancedFilterStringContainsParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type AdvancedFilterStringEndsWithObservation struct {
}

type AdvancedFilterStringEndsWithParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type AdvancedFilterStringInObservation struct {
}

type AdvancedFilterStringInParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type AdvancedFilterStringNotBeginsWithObservation struct {
}

type AdvancedFilterStringNotBeginsWithParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type AdvancedFilterStringNotContainsObservation struct {
}

type AdvancedFilterStringNotContainsParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type AdvancedFilterStringNotEndsWithObservation struct {
}

type AdvancedFilterStringNotEndsWithParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type AdvancedFilterStringNotInObservation struct {
}

type AdvancedFilterStringNotInParameters struct {
	Key string `json:"key" tf:"key"`

	Values []string `json:"values" tf:"values"`
}

type EventgridSystemTopicEventSubscriptionAdvancedFilterObservation struct {
}

type EventgridSystemTopicEventSubscriptionAdvancedFilterParameters struct {
	BoolEquals []AdvancedFilterBoolEqualsParameters `json:"boolEquals,omitempty" tf:"bool_equals"`

	IsNotNull []AdvancedFilterIsNotNullParameters `json:"isNotNull,omitempty" tf:"is_not_null"`

	IsNullOrUndefined []AdvancedFilterIsNullOrUndefinedParameters `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined"`

	NumberGreaterThan []AdvancedFilterNumberGreaterThanParameters `json:"numberGreaterThan,omitempty" tf:"number_greater_than"`

	NumberGreaterThanOrEquals []AdvancedFilterNumberGreaterThanOrEqualsParameters `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals"`

	NumberIn []AdvancedFilterNumberInParameters `json:"numberIn,omitempty" tf:"number_in"`

	NumberInRange []AdvancedFilterNumberInRangeParameters `json:"numberInRange,omitempty" tf:"number_in_range"`

	NumberLessThan []AdvancedFilterNumberLessThanParameters `json:"numberLessThan,omitempty" tf:"number_less_than"`

	NumberLessThanOrEquals []AdvancedFilterNumberLessThanOrEqualsParameters `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals"`

	NumberNotIn []AdvancedFilterNumberNotInParameters `json:"numberNotIn,omitempty" tf:"number_not_in"`

	NumberNotInRange []AdvancedFilterNumberNotInRangeParameters `json:"numberNotInRange,omitempty" tf:"number_not_in_range"`

	StringBeginsWith []AdvancedFilterStringBeginsWithParameters `json:"stringBeginsWith,omitempty" tf:"string_begins_with"`

	StringContains []AdvancedFilterStringContainsParameters `json:"stringContains,omitempty" tf:"string_contains"`

	StringEndsWith []AdvancedFilterStringEndsWithParameters `json:"stringEndsWith,omitempty" tf:"string_ends_with"`

	StringIn []AdvancedFilterStringInParameters `json:"stringIn,omitempty" tf:"string_in"`

	StringNotBeginsWith []AdvancedFilterStringNotBeginsWithParameters `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with"`

	StringNotContains []AdvancedFilterStringNotContainsParameters `json:"stringNotContains,omitempty" tf:"string_not_contains"`

	StringNotEndsWith []AdvancedFilterStringNotEndsWithParameters `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with"`

	StringNotIn []AdvancedFilterStringNotInParameters `json:"stringNotIn,omitempty" tf:"string_not_in"`
}

type EventgridSystemTopicEventSubscriptionAzureFunctionEndpointObservation struct {
}

type EventgridSystemTopicEventSubscriptionAzureFunctionEndpointParameters struct {
	FunctionId string `json:"functionId" tf:"function_id"`

	MaxEventsPerBatch *int64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch"`

	PreferredBatchSizeInKilobytes *int64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes"`
}

type EventgridSystemTopicEventSubscriptionObservation struct {
}

type EventgridSystemTopicEventSubscriptionParameters struct {
	AdvancedFilter []EventgridSystemTopicEventSubscriptionAdvancedFilterParameters `json:"advancedFilter,omitempty" tf:"advanced_filter"`

	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled"`

	AzureFunctionEndpoint []EventgridSystemTopicEventSubscriptionAzureFunctionEndpointParameters `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint"`

	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema"`

	EventhubEndpointId *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id"`

	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc"`

	HybridConnectionEndpointId *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id"`

	IncludedEventTypes []string `json:"includedEventTypes,omitempty" tf:"included_event_types"`

	Labels []string `json:"labels,omitempty" tf:"labels"`

	Name string `json:"name" tf:"name"`

	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	RetryPolicy []EventgridSystemTopicEventSubscriptionRetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy"`

	ServiceBusQueueEndpointId *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id"`

	ServiceBusTopicEndpointId *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id"`

	StorageBlobDeadLetterDestination []EventgridSystemTopicEventSubscriptionStorageBlobDeadLetterDestinationParameters `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination"`

	StorageQueueEndpoint []EventgridSystemTopicEventSubscriptionStorageQueueEndpointParameters `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint"`

	SubjectFilter []EventgridSystemTopicEventSubscriptionSubjectFilterParameters `json:"subjectFilter,omitempty" tf:"subject_filter"`

	SystemTopic string `json:"systemTopic" tf:"system_topic"`

	WebhookEndpoint []EventgridSystemTopicEventSubscriptionWebhookEndpointParameters `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint"`
}

type EventgridSystemTopicEventSubscriptionRetryPolicyObservation struct {
}

type EventgridSystemTopicEventSubscriptionRetryPolicyParameters struct {
	EventTimeToLive int64 `json:"eventTimeToLive" tf:"event_time_to_live"`

	MaxDeliveryAttempts int64 `json:"maxDeliveryAttempts" tf:"max_delivery_attempts"`
}

type EventgridSystemTopicEventSubscriptionStorageBlobDeadLetterDestinationObservation struct {
}

type EventgridSystemTopicEventSubscriptionStorageBlobDeadLetterDestinationParameters struct {
	StorageAccountId string `json:"storageAccountId" tf:"storage_account_id"`

	StorageBlobContainerName string `json:"storageBlobContainerName" tf:"storage_blob_container_name"`
}

type EventgridSystemTopicEventSubscriptionStorageQueueEndpointObservation struct {
}

type EventgridSystemTopicEventSubscriptionStorageQueueEndpointParameters struct {
	QueueName string `json:"queueName" tf:"queue_name"`

	StorageAccountId string `json:"storageAccountId" tf:"storage_account_id"`
}

type EventgridSystemTopicEventSubscriptionSubjectFilterObservation struct {
}

type EventgridSystemTopicEventSubscriptionSubjectFilterParameters struct {
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive"`

	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with"`

	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with"`
}

type EventgridSystemTopicEventSubscriptionWebhookEndpointObservation struct {
	BaseUrl string `json:"baseUrl" tf:"base_url"`
}

type EventgridSystemTopicEventSubscriptionWebhookEndpointParameters struct {
	ActiveDirectoryAppIdOrUri *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri"`

	ActiveDirectoryTenantId *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id"`

	MaxEventsPerBatch *int64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch"`

	PreferredBatchSizeInKilobytes *int64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes"`

	Url string `json:"url" tf:"url"`
}

// EventgridSystemTopicEventSubscriptionSpec defines the desired state of EventgridSystemTopicEventSubscription
type EventgridSystemTopicEventSubscriptionSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       EventgridSystemTopicEventSubscriptionParameters `json:"forProvider"`
}

// EventgridSystemTopicEventSubscriptionStatus defines the observed state of EventgridSystemTopicEventSubscription.
type EventgridSystemTopicEventSubscriptionStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          EventgridSystemTopicEventSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// EventgridSystemTopicEventSubscription is the Schema for the EventgridSystemTopicEventSubscriptions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type EventgridSystemTopicEventSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EventgridSystemTopicEventSubscriptionSpec   `json:"spec"`
	Status            EventgridSystemTopicEventSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EventgridSystemTopicEventSubscriptionList contains a list of EventgridSystemTopicEventSubscriptions
type EventgridSystemTopicEventSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EventgridSystemTopicEventSubscription `json:"items"`
}

// Repository type metadata.
var (
	EventgridSystemTopicEventSubscriptionKind             = "EventgridSystemTopicEventSubscription"
	EventgridSystemTopicEventSubscriptionGroupKind        = schema.GroupKind{Group: Group, Kind: EventgridSystemTopicEventSubscriptionKind}.String()
	EventgridSystemTopicEventSubscriptionKindAPIVersion   = EventgridSystemTopicEventSubscriptionKind + "." + GroupVersion.String()
	EventgridSystemTopicEventSubscriptionGroupVersionKind = GroupVersion.WithKind(EventgridSystemTopicEventSubscriptionKind)
)

func init() {
	SchemeBuilder.Register(&EventgridSystemTopicEventSubscription{}, &EventgridSystemTopicEventSubscriptionList{})
}
