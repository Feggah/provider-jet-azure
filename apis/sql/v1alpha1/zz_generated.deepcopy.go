// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedAuditingPolicyObservation) DeepCopyInto(out *ExtendedAuditingPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedAuditingPolicyObservation.
func (in *ExtendedAuditingPolicyObservation) DeepCopy() *ExtendedAuditingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ExtendedAuditingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedAuditingPolicyParameters) DeepCopyInto(out *ExtendedAuditingPolicyParameters) {
	*out = *in
	if in.LogMonitoringEnabled != nil {
		in, out := &in.LogMonitoringEnabled, &out.LogMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(int64)
		**out = **in
	}
	if in.StorageAccountAccessKeyIsSecondary != nil {
		in, out := &in.StorageAccountAccessKeyIsSecondary, &out.StorageAccountAccessKeyIsSecondary
		*out = new(bool)
		**out = **in
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageEndpoint != nil {
		in, out := &in.StorageEndpoint, &out.StorageEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedAuditingPolicyParameters.
func (in *ExtendedAuditingPolicyParameters) DeepCopy() *ExtendedAuditingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ExtendedAuditingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportObservation) DeepCopyInto(out *ImportObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportObservation.
func (in *ImportObservation) DeepCopy() *ImportObservation {
	if in == nil {
		return nil
	}
	out := new(ImportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportParameters) DeepCopyInto(out *ImportParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	out.AdministratorLoginPasswordSecretRef = in.AdministratorLoginPasswordSecretRef
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.OperationMode != nil {
		in, out := &in.OperationMode, &out.OperationMode
		*out = new(string)
		**out = **in
	}
	out.StorageKeySecretRef = in.StorageKeySecretRef
	if in.StorageKeyType != nil {
		in, out := &in.StorageKeyType, &out.StorageKeyType
		*out = new(string)
		**out = **in
	}
	if in.StorageURI != nil {
		in, out := &in.StorageURI, &out.StorageURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportParameters.
func (in *ImportParameters) DeepCopy() *ImportParameters {
	if in == nil {
		return nil
	}
	out := new(ImportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlActiveDirectoryAdministrator) DeepCopyInto(out *SqlActiveDirectoryAdministrator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlActiveDirectoryAdministrator.
func (in *SqlActiveDirectoryAdministrator) DeepCopy() *SqlActiveDirectoryAdministrator {
	if in == nil {
		return nil
	}
	out := new(SqlActiveDirectoryAdministrator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlActiveDirectoryAdministrator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlActiveDirectoryAdministratorList) DeepCopyInto(out *SqlActiveDirectoryAdministratorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlActiveDirectoryAdministrator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlActiveDirectoryAdministratorList.
func (in *SqlActiveDirectoryAdministratorList) DeepCopy() *SqlActiveDirectoryAdministratorList {
	if in == nil {
		return nil
	}
	out := new(SqlActiveDirectoryAdministratorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlActiveDirectoryAdministratorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlActiveDirectoryAdministratorObservation) DeepCopyInto(out *SqlActiveDirectoryAdministratorObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlActiveDirectoryAdministratorObservation.
func (in *SqlActiveDirectoryAdministratorObservation) DeepCopy() *SqlActiveDirectoryAdministratorObservation {
	if in == nil {
		return nil
	}
	out := new(SqlActiveDirectoryAdministratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlActiveDirectoryAdministratorParameters) DeepCopyInto(out *SqlActiveDirectoryAdministratorParameters) {
	*out = *in
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlActiveDirectoryAdministratorParameters.
func (in *SqlActiveDirectoryAdministratorParameters) DeepCopy() *SqlActiveDirectoryAdministratorParameters {
	if in == nil {
		return nil
	}
	out := new(SqlActiveDirectoryAdministratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlActiveDirectoryAdministratorSpec) DeepCopyInto(out *SqlActiveDirectoryAdministratorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlActiveDirectoryAdministratorSpec.
func (in *SqlActiveDirectoryAdministratorSpec) DeepCopy() *SqlActiveDirectoryAdministratorSpec {
	if in == nil {
		return nil
	}
	out := new(SqlActiveDirectoryAdministratorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlActiveDirectoryAdministratorStatus) DeepCopyInto(out *SqlActiveDirectoryAdministratorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlActiveDirectoryAdministratorStatus.
func (in *SqlActiveDirectoryAdministratorStatus) DeepCopy() *SqlActiveDirectoryAdministratorStatus {
	if in == nil {
		return nil
	}
	out := new(SqlActiveDirectoryAdministratorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabase) DeepCopyInto(out *SqlDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabase.
func (in *SqlDatabase) DeepCopy() *SqlDatabase {
	if in == nil {
		return nil
	}
	out := new(SqlDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseList) DeepCopyInto(out *SqlDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseList.
func (in *SqlDatabaseList) DeepCopy() *SqlDatabaseList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseObservation) DeepCopyInto(out *SqlDatabaseObservation) {
	*out = *in
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(string)
		**out = **in
	}
	if in.DefaultSecondaryLocation != nil {
		in, out := &in.DefaultSecondaryLocation, &out.DefaultSecondaryLocation
		*out = new(string)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseObservation.
func (in *SqlDatabaseObservation) DeepCopy() *SqlDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseParameters) DeepCopyInto(out *SqlDatabaseParameters) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.CreateMode != nil {
		in, out := &in.CreateMode, &out.CreateMode
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ElasticPoolName != nil {
		in, out := &in.ElasticPoolName, &out.ElasticPoolName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedAuditingPolicy != nil {
		in, out := &in.ExtendedAuditingPolicy, &out.ExtendedAuditingPolicy
		*out = make([]ExtendedAuditingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = make([]ImportParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeBytes != nil {
		in, out := &in.MaxSizeBytes, &out.MaxSizeBytes
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeGb != nil {
		in, out := &in.MaxSizeGb, &out.MaxSizeGb
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadScale != nil {
		in, out := &in.ReadScale, &out.ReadScale
		*out = new(bool)
		**out = **in
	}
	if in.RequestedServiceObjectiveID != nil {
		in, out := &in.RequestedServiceObjectiveID, &out.RequestedServiceObjectiveID
		*out = new(string)
		**out = **in
	}
	if in.RequestedServiceObjectiveName != nil {
		in, out := &in.RequestedServiceObjectiveName, &out.RequestedServiceObjectiveName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RestorePointInTime != nil {
		in, out := &in.RestorePointInTime, &out.RestorePointInTime
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabaseDeletionDate != nil {
		in, out := &in.SourceDatabaseDeletionDate, &out.SourceDatabaseDeletionDate
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabaseID != nil {
		in, out := &in.SourceDatabaseID, &out.SourceDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThreatDetectionPolicy != nil {
		in, out := &in.ThreatDetectionPolicy, &out.ThreatDetectionPolicy
		*out = make([]ThreatDetectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseParameters.
func (in *SqlDatabaseParameters) DeepCopy() *SqlDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseSpec) DeepCopyInto(out *SqlDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseSpec.
func (in *SqlDatabaseSpec) DeepCopy() *SqlDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseStatus) DeepCopyInto(out *SqlDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseStatus.
func (in *SqlDatabaseStatus) DeepCopy() *SqlDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlElasticpool) DeepCopyInto(out *SqlElasticpool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlElasticpool.
func (in *SqlElasticpool) DeepCopy() *SqlElasticpool {
	if in == nil {
		return nil
	}
	out := new(SqlElasticpool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlElasticpool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlElasticpoolList) DeepCopyInto(out *SqlElasticpoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlElasticpool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlElasticpoolList.
func (in *SqlElasticpoolList) DeepCopy() *SqlElasticpoolList {
	if in == nil {
		return nil
	}
	out := new(SqlElasticpoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlElasticpoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlElasticpoolObservation) DeepCopyInto(out *SqlElasticpoolObservation) {
	*out = *in
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlElasticpoolObservation.
func (in *SqlElasticpoolObservation) DeepCopy() *SqlElasticpoolObservation {
	if in == nil {
		return nil
	}
	out := new(SqlElasticpoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlElasticpoolParameters) DeepCopyInto(out *SqlElasticpoolParameters) {
	*out = *in
	if in.DBDtuMax != nil {
		in, out := &in.DBDtuMax, &out.DBDtuMax
		*out = new(int64)
		**out = **in
	}
	if in.DBDtuMin != nil {
		in, out := &in.DBDtuMin, &out.DBDtuMin
		*out = new(int64)
		**out = **in
	}
	if in.Dtu != nil {
		in, out := &in.Dtu, &out.Dtu
		*out = new(int64)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PoolSize != nil {
		in, out := &in.PoolSize, &out.PoolSize
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlElasticpoolParameters.
func (in *SqlElasticpoolParameters) DeepCopy() *SqlElasticpoolParameters {
	if in == nil {
		return nil
	}
	out := new(SqlElasticpoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlElasticpoolSpec) DeepCopyInto(out *SqlElasticpoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlElasticpoolSpec.
func (in *SqlElasticpoolSpec) DeepCopy() *SqlElasticpoolSpec {
	if in == nil {
		return nil
	}
	out := new(SqlElasticpoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlElasticpoolStatus) DeepCopyInto(out *SqlElasticpoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlElasticpoolStatus.
func (in *SqlElasticpoolStatus) DeepCopy() *SqlElasticpoolStatus {
	if in == nil {
		return nil
	}
	out := new(SqlElasticpoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFirewallRule) DeepCopyInto(out *SqlFirewallRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFirewallRule.
func (in *SqlFirewallRule) DeepCopy() *SqlFirewallRule {
	if in == nil {
		return nil
	}
	out := new(SqlFirewallRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlFirewallRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFirewallRuleList) DeepCopyInto(out *SqlFirewallRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlFirewallRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFirewallRuleList.
func (in *SqlFirewallRuleList) DeepCopy() *SqlFirewallRuleList {
	if in == nil {
		return nil
	}
	out := new(SqlFirewallRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlFirewallRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFirewallRuleObservation) DeepCopyInto(out *SqlFirewallRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFirewallRuleObservation.
func (in *SqlFirewallRuleObservation) DeepCopy() *SqlFirewallRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SqlFirewallRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFirewallRuleParameters) DeepCopyInto(out *SqlFirewallRuleParameters) {
	*out = *in
	if in.EndIPAddress != nil {
		in, out := &in.EndIPAddress, &out.EndIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.StartIPAddress != nil {
		in, out := &in.StartIPAddress, &out.StartIPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFirewallRuleParameters.
func (in *SqlFirewallRuleParameters) DeepCopy() *SqlFirewallRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SqlFirewallRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFirewallRuleSpec) DeepCopyInto(out *SqlFirewallRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFirewallRuleSpec.
func (in *SqlFirewallRuleSpec) DeepCopy() *SqlFirewallRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SqlFirewallRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFirewallRuleStatus) DeepCopyInto(out *SqlFirewallRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFirewallRuleStatus.
func (in *SqlFirewallRuleStatus) DeepCopy() *SqlFirewallRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SqlFirewallRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedDatabase) DeepCopyInto(out *SqlManagedDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedDatabase.
func (in *SqlManagedDatabase) DeepCopy() *SqlManagedDatabase {
	if in == nil {
		return nil
	}
	out := new(SqlManagedDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlManagedDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedDatabaseList) DeepCopyInto(out *SqlManagedDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlManagedDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedDatabaseList.
func (in *SqlManagedDatabaseList) DeepCopy() *SqlManagedDatabaseList {
	if in == nil {
		return nil
	}
	out := new(SqlManagedDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlManagedDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedDatabaseObservation) DeepCopyInto(out *SqlManagedDatabaseObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedDatabaseObservation.
func (in *SqlManagedDatabaseObservation) DeepCopy() *SqlManagedDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(SqlManagedDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedDatabaseParameters) DeepCopyInto(out *SqlManagedDatabaseParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SQLManagedInstanceID != nil {
		in, out := &in.SQLManagedInstanceID, &out.SQLManagedInstanceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedDatabaseParameters.
func (in *SqlManagedDatabaseParameters) DeepCopy() *SqlManagedDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(SqlManagedDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedDatabaseSpec) DeepCopyInto(out *SqlManagedDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedDatabaseSpec.
func (in *SqlManagedDatabaseSpec) DeepCopy() *SqlManagedDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(SqlManagedDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedDatabaseStatus) DeepCopyInto(out *SqlManagedDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedDatabaseStatus.
func (in *SqlManagedDatabaseStatus) DeepCopy() *SqlManagedDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(SqlManagedDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedInstance) DeepCopyInto(out *SqlManagedInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedInstance.
func (in *SqlManagedInstance) DeepCopy() *SqlManagedInstance {
	if in == nil {
		return nil
	}
	out := new(SqlManagedInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlManagedInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedInstanceList) DeepCopyInto(out *SqlManagedInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlManagedInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedInstanceList.
func (in *SqlManagedInstanceList) DeepCopy() *SqlManagedInstanceList {
	if in == nil {
		return nil
	}
	out := new(SqlManagedInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlManagedInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedInstanceObservation) DeepCopyInto(out *SqlManagedInstanceObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedInstanceObservation.
func (in *SqlManagedInstanceObservation) DeepCopy() *SqlManagedInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(SqlManagedInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedInstanceParameters) DeepCopyInto(out *SqlManagedInstanceParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	out.AdministratorLoginPasswordSecretRef = in.AdministratorLoginPasswordSecretRef
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProxyOverride != nil {
		in, out := &in.ProxyOverride, &out.ProxyOverride
		*out = new(string)
		**out = **in
	}
	if in.PublicDataEndpointEnabled != nil {
		in, out := &in.PublicDataEndpointEnabled, &out.PublicDataEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageSizeInGb != nil {
		in, out := &in.StorageSizeInGb, &out.StorageSizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
	if in.Vcores != nil {
		in, out := &in.Vcores, &out.Vcores
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedInstanceParameters.
func (in *SqlManagedInstanceParameters) DeepCopy() *SqlManagedInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(SqlManagedInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedInstanceSpec) DeepCopyInto(out *SqlManagedInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedInstanceSpec.
func (in *SqlManagedInstanceSpec) DeepCopy() *SqlManagedInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(SqlManagedInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlManagedInstanceStatus) DeepCopyInto(out *SqlManagedInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlManagedInstanceStatus.
func (in *SqlManagedInstanceStatus) DeepCopy() *SqlManagedInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(SqlManagedInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServer) DeepCopyInto(out *SqlServer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServer.
func (in *SqlServer) DeepCopy() *SqlServer {
	if in == nil {
		return nil
	}
	out := new(SqlServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlServer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerExtendedAuditingPolicyObservation) DeepCopyInto(out *SqlServerExtendedAuditingPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerExtendedAuditingPolicyObservation.
func (in *SqlServerExtendedAuditingPolicyObservation) DeepCopy() *SqlServerExtendedAuditingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SqlServerExtendedAuditingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerExtendedAuditingPolicyParameters) DeepCopyInto(out *SqlServerExtendedAuditingPolicyParameters) {
	*out = *in
	if in.LogMonitoringEnabled != nil {
		in, out := &in.LogMonitoringEnabled, &out.LogMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(int64)
		**out = **in
	}
	if in.StorageAccountAccessKeyIsSecondary != nil {
		in, out := &in.StorageAccountAccessKeyIsSecondary, &out.StorageAccountAccessKeyIsSecondary
		*out = new(bool)
		**out = **in
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageEndpoint != nil {
		in, out := &in.StorageEndpoint, &out.StorageEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerExtendedAuditingPolicyParameters.
func (in *SqlServerExtendedAuditingPolicyParameters) DeepCopy() *SqlServerExtendedAuditingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SqlServerExtendedAuditingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerList) DeepCopyInto(out *SqlServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlServer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerList.
func (in *SqlServerList) DeepCopy() *SqlServerList {
	if in == nil {
		return nil
	}
	out := new(SqlServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerObservation) DeepCopyInto(out *SqlServerObservation) {
	*out = *in
	if in.FullyQualifiedDomainName != nil {
		in, out := &in.FullyQualifiedDomainName, &out.FullyQualifiedDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerObservation.
func (in *SqlServerObservation) DeepCopy() *SqlServerObservation {
	if in == nil {
		return nil
	}
	out := new(SqlServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerParameters) DeepCopyInto(out *SqlServerParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	out.AdministratorLoginPasswordSecretRef = in.AdministratorLoginPasswordSecretRef
	if in.ConnectionPolicy != nil {
		in, out := &in.ConnectionPolicy, &out.ConnectionPolicy
		*out = new(string)
		**out = **in
	}
	if in.ExtendedAuditingPolicy != nil {
		in, out := &in.ExtendedAuditingPolicy, &out.ExtendedAuditingPolicy
		*out = make([]SqlServerExtendedAuditingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThreatDetectionPolicy != nil {
		in, out := &in.ThreatDetectionPolicy, &out.ThreatDetectionPolicy
		*out = make([]SqlServerThreatDetectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerParameters.
func (in *SqlServerParameters) DeepCopy() *SqlServerParameters {
	if in == nil {
		return nil
	}
	out := new(SqlServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerSpec) DeepCopyInto(out *SqlServerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerSpec.
func (in *SqlServerSpec) DeepCopy() *SqlServerSpec {
	if in == nil {
		return nil
	}
	out := new(SqlServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerStatus) DeepCopyInto(out *SqlServerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerStatus.
func (in *SqlServerStatus) DeepCopy() *SqlServerStatus {
	if in == nil {
		return nil
	}
	out := new(SqlServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerThreatDetectionPolicyObservation) DeepCopyInto(out *SqlServerThreatDetectionPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerThreatDetectionPolicyObservation.
func (in *SqlServerThreatDetectionPolicyObservation) DeepCopy() *SqlServerThreatDetectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SqlServerThreatDetectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerThreatDetectionPolicyParameters) DeepCopyInto(out *SqlServerThreatDetectionPolicyParameters) {
	*out = *in
	if in.DisabledAlerts != nil {
		in, out := &in.DisabledAlerts, &out.DisabledAlerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailAccountAdmins != nil {
		in, out := &in.EmailAccountAdmins, &out.EmailAccountAdmins
		*out = new(bool)
		**out = **in
	}
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageEndpoint != nil {
		in, out := &in.StorageEndpoint, &out.StorageEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerThreatDetectionPolicyParameters.
func (in *SqlServerThreatDetectionPolicyParameters) DeepCopy() *SqlServerThreatDetectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SqlServerThreatDetectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreatDetectionPolicyObservation) DeepCopyInto(out *ThreatDetectionPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreatDetectionPolicyObservation.
func (in *ThreatDetectionPolicyObservation) DeepCopy() *ThreatDetectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ThreatDetectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreatDetectionPolicyParameters) DeepCopyInto(out *ThreatDetectionPolicyParameters) {
	*out = *in
	if in.DisabledAlerts != nil {
		in, out := &in.DisabledAlerts, &out.DisabledAlerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailAccountAdmins != nil {
		in, out := &in.EmailAccountAdmins, &out.EmailAccountAdmins
		*out = new(string)
		**out = **in
	}
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageEndpoint != nil {
		in, out := &in.StorageEndpoint, &out.StorageEndpoint
		*out = new(string)
		**out = **in
	}
	if in.UseServerDefault != nil {
		in, out := &in.UseServerDefault, &out.UseServerDefault
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreatDetectionPolicyParameters.
func (in *ThreatDetectionPolicyParameters) DeepCopy() *ThreatDetectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ThreatDetectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}
