/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type VirtualMachineScaleSetExtensionObservation struct {
}

type VirtualMachineScaleSetExtensionParameters struct {

	// +kubebuilder:validation:Optional
	AutoUpgradeMinorVersion *bool `json:"autoUpgradeMinorVersion,omitempty" tf:"auto_upgrade_minor_version"`

	// +kubebuilder:validation:Optional
	ForceUpdateTag *string `json:"forceUpdateTag,omitempty" tf:"force_update_tag"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Optional
	ProtectedSettings *string `json:"protectedSettings,omitempty" tf:"protected_settings"`

	// +kubebuilder:validation:Optional
	ProvisionAfterExtensions []string `json:"provisionAfterExtensions,omitempty" tf:"provision_after_extensions"`

	// +kubebuilder:validation:Required
	Publisher string `json:"publisher" tf:"publisher"`

	// +kubebuilder:validation:Optional
	Settings *string `json:"settings,omitempty" tf:"settings"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`

	// +kubebuilder:validation:Required
	TypeHandlerVersion string `json:"typeHandlerVersion" tf:"type_handler_version"`

	// +kubebuilder:validation:Required
	VirtualMachineScaleSetID string `json:"virtualMachineScaleSetId" tf:"virtual_machine_scale_set_id"`
}

// VirtualMachineScaleSetExtensionSpec defines the desired state of VirtualMachineScaleSetExtension
type VirtualMachineScaleSetExtensionSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       VirtualMachineScaleSetExtensionParameters `json:"forProvider"`
}

// VirtualMachineScaleSetExtensionStatus defines the observed state of VirtualMachineScaleSetExtension.
type VirtualMachineScaleSetExtensionStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          VirtualMachineScaleSetExtensionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VirtualMachineScaleSetExtension is the Schema for the VirtualMachineScaleSetExtensions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type VirtualMachineScaleSetExtension struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VirtualMachineScaleSetExtensionSpec   `json:"spec"`
	Status            VirtualMachineScaleSetExtensionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VirtualMachineScaleSetExtensionList contains a list of VirtualMachineScaleSetExtensions
type VirtualMachineScaleSetExtensionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachineScaleSetExtension `json:"items"`
}

// Repository type metadata.
var (
	VirtualMachineScaleSetExtensionKind             = "VirtualMachineScaleSetExtension"
	VirtualMachineScaleSetExtensionGroupKind        = schema.GroupKind{Group: Group, Kind: VirtualMachineScaleSetExtensionKind}.String()
	VirtualMachineScaleSetExtensionKindAPIVersion   = VirtualMachineScaleSetExtensionKind + "." + GroupVersion.String()
	VirtualMachineScaleSetExtensionGroupVersionKind = GroupVersion.WithKind(VirtualMachineScaleSetExtensionKind)
)

func init() {
	SchemeBuilder.Register(&VirtualMachineScaleSetExtension{}, &VirtualMachineScaleSetExtensionList{})
}
