/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApiManagementApiDiagnosticObservation struct {
}

type ApiManagementApiDiagnosticParameters struct {
	AlwaysLogErrors *bool `json:"alwaysLogErrors,omitempty" tf:"always_log_errors"`

	ApiManagementLoggerId string `json:"apiManagementLoggerId" tf:"api_management_logger_id"`

	ApiManagementName string `json:"apiManagementName" tf:"api_management_name"`

	ApiName string `json:"apiName" tf:"api_name"`

	BackendRequest []BackendRequestParameters `json:"backendRequest,omitempty" tf:"backend_request"`

	BackendResponse []BackendResponseParameters `json:"backendResponse,omitempty" tf:"backend_response"`

	FrontendRequest []FrontendRequestParameters `json:"frontendRequest,omitempty" tf:"frontend_request"`

	FrontendResponse []FrontendResponseParameters `json:"frontendResponse,omitempty" tf:"frontend_response"`

	HttpCorrelationProtocol *string `json:"httpCorrelationProtocol,omitempty" tf:"http_correlation_protocol"`

	Identifier string `json:"identifier" tf:"identifier"`

	LogClientIp *bool `json:"logClientIp,omitempty" tf:"log_client_ip"`

	OperationNameFormat *string `json:"operationNameFormat,omitempty" tf:"operation_name_format"`

	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	SamplingPercentage *float64 `json:"samplingPercentage,omitempty" tf:"sampling_percentage"`

	Verbosity *string `json:"verbosity,omitempty" tf:"verbosity"`
}

type BackendRequestObservation struct {
}

type BackendRequestParameters struct {
	BodyBytes *int64 `json:"bodyBytes,omitempty" tf:"body_bytes"`

	DataMasking []DataMaskingParameters `json:"dataMasking,omitempty" tf:"data_masking"`

	HeadersToLog []string `json:"headersToLog,omitempty" tf:"headers_to_log"`
}

type BackendResponseDataMaskingObservation struct {
}

type BackendResponseDataMaskingParameters struct {
	Headers []DataMaskingHeadersParameters `json:"headers,omitempty" tf:"headers"`

	QueryParams []DataMaskingQueryParamsParameters `json:"queryParams,omitempty" tf:"query_params"`
}

type BackendResponseObservation struct {
}

type BackendResponseParameters struct {
	BodyBytes *int64 `json:"bodyBytes,omitempty" tf:"body_bytes"`

	DataMasking []BackendResponseDataMaskingParameters `json:"dataMasking,omitempty" tf:"data_masking"`

	HeadersToLog []string `json:"headersToLog,omitempty" tf:"headers_to_log"`
}

type DataMaskingHeadersObservation struct {
}

type DataMaskingHeadersParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

type DataMaskingObservation struct {
}

type DataMaskingParameters struct {
	Headers []HeadersParameters `json:"headers,omitempty" tf:"headers"`

	QueryParams []QueryParamsParameters `json:"queryParams,omitempty" tf:"query_params"`
}

type DataMaskingQueryParamsObservation struct {
}

type DataMaskingQueryParamsParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

type FrontendRequestDataMaskingHeadersObservation struct {
}

type FrontendRequestDataMaskingHeadersParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

type FrontendRequestDataMaskingObservation struct {
}

type FrontendRequestDataMaskingParameters struct {
	Headers []FrontendRequestDataMaskingHeadersParameters `json:"headers,omitempty" tf:"headers"`

	QueryParams []FrontendRequestDataMaskingQueryParamsParameters `json:"queryParams,omitempty" tf:"query_params"`
}

type FrontendRequestDataMaskingQueryParamsObservation struct {
}

type FrontendRequestDataMaskingQueryParamsParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

type FrontendRequestObservation struct {
}

type FrontendRequestParameters struct {
	BodyBytes *int64 `json:"bodyBytes,omitempty" tf:"body_bytes"`

	DataMasking []FrontendRequestDataMaskingParameters `json:"dataMasking,omitempty" tf:"data_masking"`

	HeadersToLog []string `json:"headersToLog,omitempty" tf:"headers_to_log"`
}

type FrontendResponseDataMaskingHeadersObservation struct {
}

type FrontendResponseDataMaskingHeadersParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

type FrontendResponseDataMaskingObservation struct {
}

type FrontendResponseDataMaskingParameters struct {
	Headers []FrontendResponseDataMaskingHeadersParameters `json:"headers,omitempty" tf:"headers"`

	QueryParams []FrontendResponseDataMaskingQueryParamsParameters `json:"queryParams,omitempty" tf:"query_params"`
}

type FrontendResponseDataMaskingQueryParamsObservation struct {
}

type FrontendResponseDataMaskingQueryParamsParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

type FrontendResponseObservation struct {
}

type FrontendResponseParameters struct {
	BodyBytes *int64 `json:"bodyBytes,omitempty" tf:"body_bytes"`

	DataMasking []FrontendResponseDataMaskingParameters `json:"dataMasking,omitempty" tf:"data_masking"`

	HeadersToLog []string `json:"headersToLog,omitempty" tf:"headers_to_log"`
}

type HeadersObservation struct {
}

type HeadersParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

type QueryParamsObservation struct {
}

type QueryParamsParameters struct {
	Mode string `json:"mode" tf:"mode"`

	Value string `json:"value" tf:"value"`
}

// ApiManagementApiDiagnosticSpec defines the desired state of ApiManagementApiDiagnostic
type ApiManagementApiDiagnosticSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiManagementApiDiagnosticParameters `json:"forProvider"`
}

// ApiManagementApiDiagnosticStatus defines the observed state of ApiManagementApiDiagnostic.
type ApiManagementApiDiagnosticStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiManagementApiDiagnosticObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementApiDiagnostic is the Schema for the ApiManagementApiDiagnostics API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApiManagementApiDiagnostic struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiManagementApiDiagnosticSpec   `json:"spec"`
	Status            ApiManagementApiDiagnosticStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementApiDiagnosticList contains a list of ApiManagementApiDiagnostics
type ApiManagementApiDiagnosticList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiManagementApiDiagnostic `json:"items"`
}

// Repository type metadata.
var (
	ApiManagementApiDiagnosticKind             = "ApiManagementApiDiagnostic"
	ApiManagementApiDiagnosticGroupKind        = schema.GroupKind{Group: Group, Kind: ApiManagementApiDiagnosticKind}.String()
	ApiManagementApiDiagnosticKindAPIVersion   = ApiManagementApiDiagnosticKind + "." + GroupVersion.String()
	ApiManagementApiDiagnosticGroupVersionKind = GroupVersion.WithKind(ApiManagementApiDiagnosticKind)
)

func init() {
	SchemeBuilder.Register(&ApiManagementApiDiagnostic{}, &ApiManagementApiDiagnosticList{})
}
